"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[7464],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(a),m=r,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||i;return a?n.createElement(h,o(o({ref:t},p),{},{components:a})):n.createElement(h,o({ref:t},p))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=a[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},94099:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=a(87462),r=(a(67294),a(3905));const i={sidebar_position:4,description:"cs50x practice problem  seven-day-average",title:"seven-day-average"},o="Seven Day Averages - CS50x 2023",l={unversionedId:"curriculum-resource/cs50x/lecture7/practice problems/seven-day-average",id:"curriculum-resource/cs50x/lecture7/practice problems/seven-day-average",title:"seven-day-average",description:"cs50x practice problem  seven-day-average",source:"@site/docs/curriculum-resource/cs50x/lecture7/practice problems/seven-day-average.md",sourceDirName:"curriculum-resource/cs50x/lecture7/practice problems",slug:"/curriculum-resource/cs50x/lecture7/practice problems/seven-day-average",permalink:"/docs/curriculum-resource/cs50x/lecture7/practice problems/seven-day-average",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,description:"cs50x practice problem  seven-day-average",title:"seven-day-average"},sidebar:"tutorialSidebar",previous:{title:"jar",permalink:"/docs/curriculum-resource/cs50x/lecture7/practice problems/jar"},next:{title:"taqueria",permalink:"/docs/curriculum-resource/cs50x/lecture7/practice problems/taqueria"}},s={},c=[{value:"Learning Goals",id:"learning-goals",level:2},{value:"Background",id:"background",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"<code>calculate</code>",id:"calculate",level:3},{value:"<code>comparative_averages</code>",id:"comparative_averages",level:3},{value:"Thought Question",id:"thought-question",level:2},{value:"How to Test Your Code",id:"how-to-test-your-code",level:2},{value:"How to Submit",id:"how-to-submit",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,n.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"seven-day-averages---cs50x-2023"},"Seven Day Averages - CS50x 2023"),(0,r.kt)("h2",{id:"learning-goals"},(0,r.kt)("a",{parentName:"h2",href:"#learning-goals"},"Learning Goals")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Work with live data"),(0,r.kt)("li",{parentName:"ul"},"Get practice with CSV files and ",(0,r.kt)("inlineCode",{parentName:"li"},"csv.DictReader")),(0,r.kt)("li",{parentName:"ul"},"Practice using dictionaries, lists and exceptions")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"sevendaysavg",src:a(51627).Z,width:"3022",height:"1568"})),(0,r.kt)("h2",{id:"background"},(0,r.kt)("a",{parentName:"h2",href:"#background"},"Background")),(0,r.kt)("p",null,"A popular way to track COVID cases is using a 7-day average. Some states only record cases once a week, so using a 7-day average is much more accurate than daily numbers. In this program, you will be using a ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/nytimes/covid-19-data"},"New York Times repository")," of live, cumulative COVID data to calculate new daily cases, create a 7-day average, and compare this week\u2019s average to the previous week."),(0,r.kt)("h2",{id:"getting-started"},(0,r.kt)("a",{parentName:"h2",href:"#getting-started"},"Getting Started")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Log into ",(0,r.kt)("a",{parentName:"li",href:"https://cs50.dev/"},"cs50.dev")," using your GitHub account."),(0,r.kt)("li",{parentName:"ol"},"Click inside the terminal window and execute ",(0,r.kt)("inlineCode",{parentName:"li"},"cd"),"."),(0,r.kt)("li",{parentName:"ol"},"Execute ",(0,r.kt)("inlineCode",{parentName:"li"},"wget https://cdn.cs50.net/2022/fall/labs/6/seven-day-average.zip")," followed by Enter in order to download a zip called ",(0,r.kt)("inlineCode",{parentName:"li"},"seven-day-average.zip")," in your codespace. Take care not to overlook the space between ",(0,r.kt)("inlineCode",{parentName:"li"},"wget")," and the following URL, or any other character for that matter!"),(0,r.kt)("li",{parentName:"ol"},"Now execute ",(0,r.kt)("inlineCode",{parentName:"li"},"unzip seven-day-average.zip")," to create a folder called ",(0,r.kt)("inlineCode",{parentName:"li"},"seven-day-average"),"."),(0,r.kt)("li",{parentName:"ol"},"You no longer need the ZIP file, so you can execute ",(0,r.kt)("inlineCode",{parentName:"li"},"rm seven-day-average.zip")," and respond with \u201cy\u201d followed by Enter at the prompt.")),(0,r.kt)("h2",{id:"implementation-details"},(0,r.kt)("a",{parentName:"h2",href:"#implementation-details"},"Implementation Details")),(0,r.kt)("p",null,"The distribution code for this problem uses the python ",(0,r.kt)("inlineCode",{parentName:"p"},"requests")," library to access the New York Times data stored in an accessible GitHub repository. This is stored as a CSV file. The program then uses ",(0,r.kt)("inlineCode",{parentName:"p"},"DictReader")," to read the CSV file. It then creates a ",(0,r.kt)("inlineCode",{parentName:"p"},"states")," list to use selected states for calculations."),(0,r.kt)("p",null,"You will be completing two functions, ",(0,r.kt)("inlineCode",{parentName:"p"},"calculate")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"comparative_averages"),"."),(0,r.kt)("h3",{id:"calculate"},(0,r.kt)("a",{parentName:"h3",href:"#calculate"},(0,r.kt)("inlineCode",{parentName:"a"},"calculate"))),(0,r.kt)("p",null,"In ",(0,r.kt)("inlineCode",{parentName:"p"},"calculate"),", you\u2019ll be creating a dictionary, ",(0,r.kt)("inlineCode",{parentName:"p"},"new_cases"),", which will keep track of 14 days of new COVID cases for each state. Keys in this ",(0,r.kt)("inlineCode",{parentName:"p"},"dict")," will be the names of states, and the values for each of those keys will be the most recent 14 days of new cases. Since the data from the New York Times is cumulative, each day\u2019s new cases must be calculated by subtracting the previous day\u2019s cases. To do this, you may want to create a second dictionary, ",(0,r.kt)("inlineCode",{parentName:"p"},"previous_cases"),", that keeps track of each day\u2019s new cases as it\u2019s calculated."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Hint"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"You can store 14 values in the list for each state by appending each new day\u2019s data to end of the list and when the length of the list is greater than 14, removing the first element from the list.")))),(0,r.kt)("p",null,"Your ",(0,r.kt)("inlineCode",{parentName:"p"},"calculate")," function should ultimately return the ",(0,r.kt)("inlineCode",{parentName:"p"},"new_cases")," dictionary."),(0,r.kt)("h3",{id:"comparative_averages"},(0,r.kt)("a",{parentName:"h3",href:"#comparative_averages"},(0,r.kt)("inlineCode",{parentName:"a"},"comparative_averages"))),(0,r.kt)("p",null,"Since your ",(0,r.kt)("inlineCode",{parentName:"p"},"new_cases")," dictionary is passed to this function, you can calculate this week\u2019s 7-day average by summing up the ",(0,r.kt)("em",{parentName:"p"},"last")," 7 elements in the list for a selected state, then dividing this by 7. You can create a 7-day average for the previous week by doing the same with the ",(0,r.kt)("em",{parentName:"p"},"first")," 7 elements in that same list."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Hint"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Check out python list slicing to easily access a range of elements in a list. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},"values[3:5]")," will return the 3rd through 4th indexed elements in the list ",(0,r.kt)("inlineCode",{parentName:"li"},"values"),". Note that the second index is ",(0,r.kt)("em",{parentName:"li"},"not")," inclusive.")))),(0,r.kt)("p",null,"You can then calculate the percent increase or decrease, by taking the difference of the two 7-day averages and dividing by last week\u2019s average."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Hint"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Note that you can detect division by zero by handling a ",(0,r.kt)("inlineCode",{parentName:"li"},"ZeroDivisionError")," with a ",(0,r.kt)("inlineCode",{parentName:"li"},"try")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"except")," block. For example:")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"try:\n    numerator / denominator\nexcept ZeroDivisionError:\n    ...\n\n")),(0,r.kt)("p",{parentName:"li"},"Take a look at Week 3 in ",(0,r.kt)("a",{parentName:"p",href:"https://cs50.harvard.edu/python/2022/weeks/3/"},"CS50P")," for more on exceptions in Python."))),(0,r.kt)("h2",{id:"thought-question"},(0,r.kt)("a",{parentName:"h2",href:"#thought-question"},"Thought Question")),(0,r.kt)("p",null,"Why do you think some websites, such as ",(0,r.kt)("a",{parentName:"p",href:"https://www.washingtonpost.com/graphics/2020/national/coronavirus-us-cases-deaths/?state=US"},"The Washington Post")," post different values than your program generates for \u201cAverage daily new cases\u201d and \u201cChange in avg. daily cases in last 7 days\u201d for some states, and the same values for others?"),(0,r.kt)("h2",{id:"how-to-test-your-code"},(0,r.kt)("a",{parentName:"h2",href:"#how-to-test-your-code"},"How to Test Your Code")),(0,r.kt)("p",null,"Your program should behave per the examples below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"seven-day-average/ $ python seven-day-average.py\nChoose one or more states to view average COVID cases.\nPress enter when done.\n\nState: Massachusetts\nState: New York\nState: \n\nSeven-Day Averages\nMassachusetts had a 7-day average of 1646 and an increase of 46%.\nNew York had a 7-day average of 7502 and a decrease of 1%.\n\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"seven-day-average/ $ python seven-day-average.py\nChoose one or more states to view average COVID cases.\nPress enter when done.\n\nState: Maine\nState: California\nState: \n\nSeven-Day Averages\nCalifornia had a 7-day average of 20461 and a decrease of 8%.\nMaine had a 7-day average of 196 and a decrease of 10%.\n\n")),(0,r.kt)("p",null,"Do note that the numbers will vary each day, since the data you are using is updated daily."),(0,r.kt)("p",null,"No ",(0,r.kt)("inlineCode",{parentName:"p"},"check50")," for this one!"),(0,r.kt)("p",null,"To evaluate that the style of your code, type in the following at the ",(0,r.kt)("inlineCode",{parentName:"p"},"$")," prompt."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"style50 seven-day-average.py\n\n")),(0,r.kt)("h2",{id:"how-to-submit"},(0,r.kt)("a",{parentName:"h2",href:"#how-to-submit"},"How to Submit")),(0,r.kt)("p",null,"No need to submit! This is a practice problem."))}d.isMDXComponent=!0},51627:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/seven-day-averages-cf8536bae720d4739ae7c7645cda3e32.png"}}]);