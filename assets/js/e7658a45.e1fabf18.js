"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[2291],{3905:(e,t,r)=>{r.d(t,{Zo:()=>s,kt:()=>h});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),c=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=c(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=c(r),m=n,h=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return r?a.createElement(h,i(i({ref:t},s),{},{components:r})):a.createElement(h,i({ref:t},s))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[p]="string"==typeof e?e:n,i[1]=l;for(var c=2;c<o;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},92122:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const o={sidebar_position:1,description:"cs50x practice problem  debug",title:"debug"},i="Debug - CS50x 2023",l={unversionedId:"curriculum-resource/cs50x/lecture2/practice problems/debug",id:"curriculum-resource/cs50x/lecture2/practice problems/debug",title:"debug",description:"cs50x practice problem  debug",source:"@site/docs/curriculum-resource/cs50x/lecture2/practice problems/debug.md",sourceDirName:"curriculum-resource/cs50x/lecture2/practice problems",slug:"/curriculum-resource/cs50x/lecture2/practice problems/debug",permalink:"/docs/curriculum-resource/cs50x/lecture2/practice problems/debug",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"cs50x practice problem  debug",title:"debug"},sidebar:"tutorialSidebar",previous:{title:"Practice Problem",permalink:"/docs/curriculum-resource/cs50x/lecture2/practice problems/"},next:{title:"half",permalink:"/docs/curriculum-resource/cs50x/lecture2/practice problems/half"}},u={},c=[{value:"Learning Goals",id:"learning-goals",level:2},{value:"Background",id:"background",level:2},{value:"Demo",id:"demo",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Thought Question",id:"thought-question",level:2},{value:"How to Test Your Code",id:"how-to-test-your-code",level:2},{value:"How to Submit",id:"how-to-submit",level:2}],s={toc:c},p="wrapper";function d(e){let{components:t,...o}=e;return(0,n.kt)(p,(0,a.Z)({},s,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"debug---cs50x-2023"},"Debug - CS50x 2023"),(0,n.kt)("h2",{id:"learning-goals"},(0,n.kt)("a",{parentName:"h2",href:"#learning-goals"},"Learning Goals")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Become familiar with C syntax"),(0,n.kt)("li",{parentName:"ul"},"Learn what C compiler error messages mean"),(0,n.kt)("li",{parentName:"ul"},"Get practice debugging")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"debugging",src:r(7048).Z,width:"2889",height:"2285"})),(0,n.kt)("h2",{id:"background"},(0,n.kt)("a",{parentName:"h2",href:"#background"},"Background")),(0,n.kt)("p",null,"There are two kinds of errors that can occur when writing a program. The first errors you are likely to encounter are ",(0,n.kt)("strong",{parentName:"p"},"syntactical")," errors. In addition to syntactical errors, there can also be logical errors, which we\u2019ll take a look at soon."),(0,n.kt)("p",null,"In computer science, syntax is important for a computer to understand what you are telling it to do. Each programming language has its own syntactical rules, which include the combination of both words and punctuation."),(0,n.kt)("p",null,"This lab starts with distribution code which has several syntactical errors. The idea is for you to try to compile (",(0,n.kt)("inlineCode",{parentName:"p"},"make"),") the program, learn to interpret the rather cryptic error messages output by the compiler, and ",(0,n.kt)("strong",{parentName:"p"},"debug")," the program."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Hints"),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"You\u2019ll probably see the first error after trying to compile ",(0,n.kt)("inlineCode",{parentName:"li"},"debug.c")," will be ",(0,n.kt)("inlineCode",{parentName:"li"},"debug.c:9:5: error: use of undeclared identifier 'name'"),". The ",(0,n.kt)("inlineCode",{parentName:"li"},"9")," after ",(0,n.kt)("inlineCode",{parentName:"li"},"debug.c:")," means there is a problem on line 9. Why do you think is says ",(0,n.kt)("inlineCode",{parentName:"li"},"undeclared identifier"),"?"),(0,n.kt)("li",{parentName:"ul"},"You may want to look for errors such as missing symbols, missing libraries, missing variable declarations."),(0,n.kt)("li",{parentName:"ul"},"If you are still stuck, try typing into the terminal ",(0,n.kt)("inlineCode",{parentName:"li"},"help50 make debug"),".")))),(0,n.kt)("h2",{id:"demo"},(0,n.kt)("a",{parentName:"h2",href:"#demo"},"Demo")),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"DebugGif",src:r(93930).Z,width:"1750",height:"584"})),(0,n.kt)("h2",{id:"getting-started"},(0,n.kt)("a",{parentName:"h2",href:"#getting-started"},"Getting Started")),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Log into ",(0,n.kt)("a",{parentName:"li",href:"https://cs50.dev/"},"cs50.dev")," using your GitHub account."),(0,n.kt)("li",{parentName:"ol"},"Click inside the terminal window and execute ",(0,n.kt)("inlineCode",{parentName:"li"},"cd"),"."),(0,n.kt)("li",{parentName:"ol"},"At the ",(0,n.kt)("inlineCode",{parentName:"li"},"$")," prompt, type ",(0,n.kt)("inlineCode",{parentName:"li"},"mkdir debug")),(0,n.kt)("li",{parentName:"ol"},"Now execute ",(0,n.kt)("inlineCode",{parentName:"li"},"cd debug")),(0,n.kt)("li",{parentName:"ol"},"Then copy and paste ",(0,n.kt)("inlineCode",{parentName:"li"},"wget https://cdn.cs50.net/2022/fall/labs/1/debug.c")," into your terminal to download this lab\u2019s distribution code."),(0,n.kt)("li",{parentName:"ol"},"Now try compiling this program, by typing ",(0,n.kt)("inlineCode",{parentName:"li"},"make debug")," and see what happens!"),(0,n.kt)("li",{parentName:"ol"},"You most likely see an error that says: ",(0,n.kt)("inlineCode",{parentName:"li"},"debug.c:9:5: error: use of undeclared identifier 'name'")),(0,n.kt)("li",{parentName:"ol"},"This means there is an error that has something to do with an \u201cundeclared identifier\u201d, on line 9. Fix this bug, and then try to compile again. Keep in mind that debugging is an iterative process. You may need to fix an error, compile, then fix another error, compile again, multiple times!")),(0,n.kt)("h2",{id:"thought-question"},(0,n.kt)("a",{parentName:"h2",href:"#thought-question"},"Thought Question")),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Why do you think C (as well as other programming languages) have such specific rules regarding syntax?")),(0,n.kt)("h2",{id:"how-to-test-your-code"},(0,n.kt)("a",{parentName:"h2",href:"#how-to-test-your-code"},"How to Test Your Code")),(0,n.kt)("p",null,"Your program should behave per the examples below."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"debug/ $ ./debug\nWhat is your name? Carter\nWhere do you live? Cambridge\nHello, Carter, from Cambridge!\n\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"debug/ $ ./debug\nWhat is your name? Margaret\nWhere do you live? New York\nHello, Margaret, from New York!\n\n")),(0,n.kt)("p",null,"You can check your code using ",(0,n.kt)("inlineCode",{parentName:"p"},"check50"),", a program that CS50 will use to test your code when you submit, by typing in the following at the $ prompt. But be sure to test it yourself as well!"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"check50 cs50/labs/2023/x/debug\n\n")),(0,n.kt)("p",null,"Green smilies mean your program has passed a test! Red frownies will indicate your program output something unexpected. Visit the URL that ",(0,n.kt)("inlineCode",{parentName:"p"},"check50")," outputs to see the input ",(0,n.kt)("inlineCode",{parentName:"p"},"check50")," handed to your program, what output it expected, and what output your program actually gave."),(0,n.kt)("p",null,"To evaluate that the style of your code (indentations and spacing) is correct, type in the following at the ",(0,n.kt)("inlineCode",{parentName:"p"},"$")," prompt."),(0,n.kt)("h2",{id:"how-to-submit"},(0,n.kt)("a",{parentName:"h2",href:"#how-to-submit"},"How to Submit")),(0,n.kt)("p",null,"No need to submit! This is an optional practice problem."))}d.isMDXComponent=!0},93930:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/debugDemo-769a6173248cef02f62ea325881a1b8e.gif"},7048:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/first_bug-a00a40559d99b44b8b43a87e5cce3765.jpg"}}]);