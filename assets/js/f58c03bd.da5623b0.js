"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[32839],{3905:(e,t,n)=>{n.d(t,{Zo:()=>h,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),u=p(n),c=r,m=u["".concat(s,".").concat(c)]||u[c]||d[c]||o;return n?a.createElement(m,i(i({ref:t},h),{},{components:n})):a.createElement(m,i({ref:t},h))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},94911:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const o={title:"Homework 10 SQL"},i="Homework 10 | CS 61A Spring 2024",l={unversionedId:"curriculum-resource/cs61a/cs61a_en/homework/hw10",id:"curriculum-resource/cs61a/cs61a_en/homework/hw10",title:"Homework 10 SQL",description:"Homework 10: SQL",source:"@site/docs/curriculum-resource/cs61a/cs61a_en/homework/hw10.md",sourceDirName:"curriculum-resource/cs61a/cs61a_en/homework",slug:"/curriculum-resource/cs61a/cs61a_en/homework/hw10",permalink:"/docs/curriculum-resource/cs61a/cs61a_en/homework/hw10",draft:!1,tags:[],version:"current",frontMatter:{title:"Homework 10 SQL"},sidebar:"tutorialSidebar",previous:{title:"Homework 9 Programs as Data, Macros",permalink:"/docs/curriculum-resource/cs61a/cs61a_en/homework/hw09"},next:{title:"Homework 11 Finale",permalink:"/docs/curriculum-resource/cs61a/cs61a_en/homework/hw11"}},s={},p=[{value:"Homework 10: SQL",id:"homework-10-sql",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Required Questions",id:"required-questions",level:2},{value:"Getting Started Videos",id:"getting-started-videos",level:2},{value:"SQL",id:"sql",level:2},{value:"Dog Data",id:"dog-data",level:3},{value:"Q1: By Parent Height",id:"q1-by-parent-height",level:3},{value:"Q2: Size of Dogs",id:"q2-size-of-dogs",level:3},{value:"Q3: Sentences",id:"q3-sentences",level:3},{value:"Q4: Low Variance",id:"q4-low-variance",level:3},{value:"Submit",id:"submit",level:2},{value:"Exam Practice",id:"exam-practice",level:2}],h={toc:p},u="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(u,(0,a.Z)({},h,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"homework-10--cs-61a-spring-2024"},"Homework 10 | CS 61A Spring 2024"),(0,r.kt)("h2",{id:"homework-10-sql"},"Homework 10: SQL"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{target:"_blank",href:n(49619).Z},"hw10.zip"))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Due by 11:59pm on Thursday, April 25")),(0,r.kt)("h2",{id:"instructions"},"Instructions"),(0,r.kt)("p",null,"Download ",(0,r.kt)("a",{target:"_blank",href:n(49619).Z},"hw10.zip"),"."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Submission:")," When you are done, submit the assignment by uploading all code files you've edited to Gradescope. You may submit more than once before the deadline; only the final submission will be scored. Check that you have successfully submitted your code on Gradescope. See ",(0,r.kt)("a",{parentName:"p",href:"https://cs61a.org/lab/lab00#task-c-submitting-the-assignment"},"Lab 0")," for more instructions on submitting assignments."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Using Ok:")," If you have any questions about using Ok, please refer to ",(0,r.kt)("a",{parentName:"p",href:"https://cs61a.org/articles/using-ok"},"this guide.")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Grading:")," Homework is graded based on correctness. Each incorrect problem will decrease the total score by one point. ",(0,r.kt)("strong",{parentName:"p"},"This homework is out of 2 points."),"  "),(0,r.kt)("p",null,"To check your progress, you can run ",(0,r.kt)("inlineCode",{parentName:"p"},"sqlite3")," directly by running:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python3 sqlite_shell.py --init hw10.sql\n")),(0,r.kt)("p",null,"You should also check your work using ",(0,r.kt)("inlineCode",{parentName:"p"},"ok"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python3 ok\n")),(0,r.kt)("h2",{id:"required-questions"},"Required Questions"),(0,r.kt)("h2",{id:"getting-started-videos"},"Getting Started Videos"),(0,r.kt)("p",null,"These videos may provide some helpful direction for tackling the coding problems on this assignment."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"To see these videos, you should be logged into your berkeley.edu email.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://youtu.be/playlist?list=PLx38hZJ5RLZdu9gX9JS-nvtf4ELt9Vtnm"},"YouTube link")),(0,r.kt)("h2",{id:"sql"},"SQL"),(0,r.kt)("h3",{id:"dog-data"},"Dog Data"),(0,r.kt)("p",null,"In each question below, you will define a new table based on the following tables."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'CREATE TABLE parents AS\n  SELECT "abraham" AS parent, "barack" AS child UNION\n  SELECT "abraham"          , "clinton"         UNION\n  SELECT "delano"           , "herbert"         UNION\n  SELECT "fillmore"         , "abraham"         UNION\n  SELECT "fillmore"         , "delano"          UNION\n  SELECT "fillmore"         , "grover"          UNION\n  SELECT "eisenhower"       , "fillmore";\n\nCREATE TABLE dogs AS\n  SELECT "abraham" AS name, "long" AS fur, 26 AS height UNION\n  SELECT "barack"         , "short"      , 52           UNION\n  SELECT "clinton"        , "long"       , 47           UNION\n  SELECT "delano"         , "long"       , 46           UNION\n  SELECT "eisenhower"     , "short"      , 35           UNION\n  SELECT "fillmore"       , "curly"      , 32           UNION\n  SELECT "grover"         , "short"      , 28           UNION\n  SELECT "herbert"        , "curly"      , 31;\n\nCREATE TABLE sizes AS\n  SELECT "toy" AS size, 24 AS min, 28 AS max UNION\n  SELECT "mini"       , 28       , 35        UNION\n  SELECT "medium"     , 35       , 45        UNION\n  SELECT "standard"   , 45       , 60;\n')),(0,r.kt)("p",null,"Your tables should still perform correctly even if the values in these tables change. For example, if you are asked to list all dogs with a name that starts with h, you should write:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'SELECT name FROM dogs WHERE "h" <= name AND name < "i";\n')),(0,r.kt)("p",null,"Instead of assuming that the ",(0,r.kt)("inlineCode",{parentName:"p"},"dogs")," table has only the data above and writing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'SELECT "herbert";\n')),(0,r.kt)("p",null,"The former query would still be correct if the name ",(0,r.kt)("inlineCode",{parentName:"p"},"grover")," were changed to ",(0,r.kt)("inlineCode",{parentName:"p"},"hoover")," or a row was added with the name ",(0,r.kt)("inlineCode",{parentName:"p"},"harry"),"."),(0,r.kt)("h3",{id:"q1-by-parent-height"},"Q1: By Parent Height"),(0,r.kt)("p",null,"Create a table ",(0,r.kt)("inlineCode",{parentName:"p"},"by_parent_height")," that has a column of the names of all dogs that have a ",(0,r.kt)("inlineCode",{parentName:"p"},"parent"),", ordered by the height of the parent dog from tallest parent to shortest parent."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'-- All dogs with parents ordered by decreasing height of their parent\nCREATE TABLE by_parent_height AS\n  SELECT "REPLACE THIS LINE WITH YOUR SOLUTION";\n\n')),(0,r.kt)("p",null,"For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"fillmore")," has a parent ",(0,r.kt)("inlineCode",{parentName:"p"},"eisenhower")," with height 35, and so should appear before ",(0,r.kt)("inlineCode",{parentName:"p"},"grover")," who has a parent ",(0,r.kt)("inlineCode",{parentName:"p"},"fillmore")," with height 32. The names of dogs with parents of the same height should appear together in any order. For example, ",(0,r.kt)("inlineCode",{parentName:"p"},"barack")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"clinton")," should both appear at the end, but either one can come before the other."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sqlite> select * from by_parent_height;\nherbert\nfillmore\nabraham\ndelano\ngrover\nbarack\nclinton\n")),(0,r.kt)("p",null,"Use Ok to test your code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python3 ok -q by_parent_height\n")),(0,r.kt)("h3",{id:"q2-size-of-dogs"},"Q2: Size of Dogs"),(0,r.kt)("p",null,"The F\xe9d\xe9ration Cynologique Internationale classifies a standard poodle as over 45 cm and up to 60 cm. The ",(0,r.kt)("inlineCode",{parentName:"p"},"sizes")," table describes this and other such classifications, where a dog must be over the ",(0,r.kt)("inlineCode",{parentName:"p"},"min")," and less than or equal to the ",(0,r.kt)("inlineCode",{parentName:"p"},"max")," in ",(0,r.kt)("inlineCode",{parentName:"p"},"height")," to qualify as ",(0,r.kt)("inlineCode",{parentName:"p"},"size"),"."),(0,r.kt)("p",null,"Create a ",(0,r.kt)("inlineCode",{parentName:"p"},"size_of_dogs")," table with two columns, one for each dog's ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," and another for its ",(0,r.kt)("inlineCode",{parentName:"p"},"size"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'-- The size of each dog\nCREATE TABLE size_of_dogs AS\n  SELECT "REPLACE THIS LINE WITH YOUR SOLUTION";\n\n')),(0,r.kt)("p",null,"The output should look like the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sqlite> select * from size_of_dogs;\nabraham|toy\nbarack|standard\nclinton|standard\ndelano|standard\neisenhower|mini\nfillmore|mini\ngrover|toy\nherbert|mini\n")),(0,r.kt)("p",null,"Use Ok to test your code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python3 ok -q size_of_dogs\n")),(0,r.kt)("h3",{id:"q3-sentences"},"Q3: Sentences"),(0,r.kt)("p",null,"There are two pairs of siblings that have the same size. Create a table that contains a row with a string for each of these pairs. Each string should be a sentence describing the siblings by their size."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'-- Filling out this helper table is optional\nCREATE TABLE siblings AS\n  SELECT "REPLACE THIS LINE WITH YOUR SOLUTION";\n\n-- Sentences about siblings that are the same size\nCREATE TABLE sentences AS\n  SELECT "REPLACE THIS LINE WITH YOUR SOLUTION";\n\n')),(0,r.kt)("p",null,"Each sibling pair should appear only once in the output, and siblings should be listed in alphabetical order (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},'"barack and clinton..."')," instead of ",(0,r.kt)("inlineCode",{parentName:"p"},'"clinton and barack..."'),"), as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"sqlite> select * from sentences;\nThe two siblings, barack and clinton, have the same size: standard\nThe two siblings, abraham and grover, have the same size: toy\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Hint"),": First, create a helper table containing each pair of siblings. This will make comparing the sizes of siblings when constructing the main table easier."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Hint"),": If you join a table with itself, use ",(0,r.kt)("inlineCode",{parentName:"p"},"AS")," within the ",(0,r.kt)("inlineCode",{parentName:"p"},"FROM")," clause to give each table an alias."),(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"Hint"),": In order to concatenate two strings into one, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"||")," operator.")),(0,r.kt)("p",null,"Use Ok to test your code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python3 ok -q sentences\n")),(0,r.kt)("h3",{id:"q4-low-variance"},"Q4: Low Variance"),(0,r.kt)("p",null,"We want to create a table that contains the height range (difference between maximum and minimum height) of all dogs that share a fur type. However, we'll only consider fur types where each dog with that fur type is within 30% of the average height of all dogs with that fur type."),(0,r.kt)("p",null,"For example, if the average height for short-haired dogs is 10, then in order to be included in our output, all dogs with short hair must have a height of at most 13 and at least 7."),(0,r.kt)("p",null,"To achieve this, we can use ",(0,r.kt)("inlineCode",{parentName:"p"},"MIN"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"MAX"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"AVG"),". For this problem, we'll want to find the average height and make sure that:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"There are no heights smaller than 0.7 of the average."),(0,r.kt)("li",{parentName:"ul"},"There are no heights greater than 1.3 of the average.")),(0,r.kt)("p",null,"Your output should first include the fur type and then the height range for the fur types that meet this criteria."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'-- Height range for each fur type where all of the heights differ by no more than 30% from the average height\nCREATE TABLE low_variance AS\n  SELECT "REPLACE THIS LINE WITH YOUR SOLUTION";\n\n-- Example:\nSELECT * FROM low_variance;\n-- Expected output:\n-- curly|1\n')),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Explanation"),": The average height of long-haired dogs is 39.7, so the low variance criterion requires the height of each long-haired dog to be between 27.8 and 51.6. However, ",(0,r.kt)("inlineCode",{parentName:"p"},"abraham")," is a long-haired dog with height 26, which is outside this range. For short-haired dogs, ",(0,r.kt)("inlineCode",{parentName:"p"},"barack")," falls outside the valid range (check!). Thus, neither short nor long haired dogs are included in the output. There are two curly haired dogs: ",(0,r.kt)("inlineCode",{parentName:"p"},"fillmore")," with height 32 and ",(0,r.kt)("inlineCode",{parentName:"p"},"herbert")," with height 31. This gives a height range of 1."),(0,r.kt)("p",null,"Use Ok to test your code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"python3 ok -q low_variance\n")),(0,r.kt)("h2",{id:"submit"},"Submit"),(0,r.kt)("p",null,"Submit this assignment by uploading any files you've edited ",(0,r.kt)("strong",{parentName:"p"},"to the appropriate Gradescope assignment.")," ",(0,r.kt)("a",{parentName:"p",href:"https://cs61a.org/lab/lab00/#submit-with-gradescope"},"Lab 00")," has detailed instructions."),(0,r.kt)("p",null,"Make sure to submit ",(0,r.kt)("inlineCode",{parentName:"p"},"hw10.sql")," to the autograder!"),(0,r.kt)("h2",{id:"exam-practice"},"Exam Practice"),(0,r.kt)("p",null,"The following are some SQL exam problems from previous semesters that you may find useful as additional exam practice."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/fa19/final/61a-fa19-final.pdf#page=11"},"Fall 2019 Final, Question 10: Big Game")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/su19/final/61a-su19-final.pdf#page=11"},"Summer 2019 Final, Question 8: The Big SQL")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("a",{parentName:"li",href:"https://inst.eecs.berkeley.edu/~cs61a/fa18/assets/pdfs/61a-fa18-final.pdf#page=9"},"Fall 2018 Final, Question 7: SQL of Course"))))}d.isMDXComponent=!0},49619:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/hw10-cdcf65f529238a5e42d576c55374a0b2.zip"}}]);