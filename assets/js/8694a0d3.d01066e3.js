"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[96982],{3905:(e,t,n)=>{n.d(t,{Zo:()=>k,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var _=r.createContext({}),o=function(e){var t=r.useContext(_),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},k=function(e){var t=o(e.components);return r.createElement(_.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,_=e.parentName,k=p(e,["components","mdxType","originalType","parentName"]),d=o(n),m=a,c=d["".concat(_,".").concat(m)]||d[m]||u[m]||l;return n?r.createElement(c,i(i({ref:t},k),{},{components:n})):r.createElement(c,i({ref:t},k))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=m;var p={};for(var _ in t)hasOwnProperty.call(t,_)&&(p[_]=t[_]);p.originalType=e,p[d]="string"==typeof e?e:a,i[1]=p;for(var o=2;o<l;o++)i[o]=n[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},68383:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>_,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var r=n(87462),a=(n(67294),n(3905));const l={title:"Lab 8 Mutable Trees"},i="Lab 8\uff1a\u53ef\u53d8\u6811 | CS 61A 2024\u5e74\u6625\u5b63",p={unversionedId:"curriculum-resource/cs61a/cs61a_zh/lab/lab08",id:"curriculum-resource/cs61a/cs61a_zh/lab/lab08",title:"Lab 8 Mutable Trees",description:"Lab 8\uff1a\u53ef\u53d8\u6811",source:"@site/docs/curriculum-resource/cs61a/cs61a_zh/lab/lab08.md",sourceDirName:"curriculum-resource/cs61a/cs61a_zh/lab",slug:"/curriculum-resource/cs61a/cs61a_zh/lab/lab08",permalink:"/docs/curriculum-resource/cs61a/cs61a_zh/lab/lab08",draft:!1,tags:[],version:"current",frontMatter:{title:"Lab 8 Mutable Trees"},sidebar:"tutorialSidebar",previous:{title:"Lab 7 Inheritance, Linked Lists",permalink:"/docs/curriculum-resource/cs61a/cs61a_zh/lab/lab07"},next:{title:"Lab 9 Scheme",permalink:"/docs/curriculum-resource/cs61a/cs61a_zh/lab/lab09"}},_={},o=[{value:"Lab 8\uff1a\u53ef\u53d8\u6811",id:"lab-8\u53ef\u53d8\u6811",level:2},{value:"\u521d\u59cb\u6587\u4ef6",id:"\u521d\u59cb\u6587\u4ef6",level:2},{value:"\u5185\u5bb9\u63d0\u8981",id:"\u5185\u5bb9\u63d0\u8981",level:2},{value:"\u5fc5\u505a\u7ec3\u4e60",id:"\u5fc5\u505a\u7ec3\u4e60",level:2},{value:"\u5165\u95e8\u6307\u5bfc\u89c6\u9891",id:"\u5165\u95e8\u6307\u5bfc\u89c6\u9891",level:2},{value:"\u53ef\u53d8\u6811\u7ed3\u6784",id:"\u53ef\u53d8\u6811\u7ed3\u6784",level:2},{value:"Q1\uff1aWWPD\uff1a\u6811",id:"q1wwpd\u6811",level:3},{value:"Q2\uff1a\u7d2f\u79ef\u4e58\u79ef",id:"q2\u7d2f\u79ef\u4e58\u79ef",level:3},{value:"Q3\uff1a\u4fee\u526a\u5c0f\u6811",id:"q3\u4fee\u526a\u5c0f\u6811",level:3},{value:"\u5728\u672c\u5730\u67e5\u770b\u4f60\u7684\u5206\u6570",id:"\u5728\u672c\u5730\u67e5\u770b\u4f60\u7684\u5206\u6570",level:2},{value:"\u63d0\u4ea4",id:"\u63d0\u4ea4",level:2},{value:"\u53ef\u9009\u95ee\u9898",id:"\u53ef\u9009\u95ee\u9898",level:2},{value:"Q4: \u5220\u9664",id:"q4-\u5220\u9664",level:3}],k={toc:o},d="wrapper";function u(e){let{components:t,...l}=e;return(0,a.kt)(d,(0,r.Z)({},k,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"lab-8\u53ef\u53d8\u6811--cs-61a-2024\u5e74\u6625\u5b63"},"Lab 8\uff1a\u53ef\u53d8\u6811 | CS 61A 2024\u5e74\u6625\u5b63"),(0,a.kt)("h2",{id:"lab-8\u53ef\u53d8\u6811"},"Lab 8\uff1a\u53ef\u53d8\u6811"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{target:"_blank",href:n(31403).Z},"lab08.zip"))),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"\u622a\u6b62\u65e5\u671f\uff1a3\u670820\u65e5 \u661f\u671f\u4e09 \u665a\u4e0a11:59")),(0,a.kt)("h2",{id:"\u521d\u59cb\u6587\u4ef6"},"\u521d\u59cb\u6587\u4ef6"),(0,a.kt)("p",null,"\u4e0b\u8f7d ",(0,a.kt)("a",{target:"_blank",href:n(31403).Z},"lab08.zip"),"\u3002\u538b\u7f29\u5305\u5185\u5305\u542b\u672c\u6b21\u5b9e\u9a8c\u7684\u521d\u59cb\u6587\u4ef6\uff0c\u4ee5\u53caOk\u81ea\u52a8\u8bc4\u5206\u5668\u7684\u526f\u672c\u3002"),(0,a.kt)("h2",{id:"\u5185\u5bb9\u63d0\u8981"},"\u5185\u5bb9\u63d0\u8981"),(0,a.kt)("p",null,"\u5982\u679c\u4f60\u9700\u8981\u590d\u4e60\u76f8\u5173\u77e5\u8bc6\uff0c\u8bf7\u67e5\u9605\u672c\u8282\u3002\u4f60\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8df3\u5230",(0,a.kt)("a",{parentName:"p",href:"#required-questions"},"\u95ee\u9898"),"\uff0c\u9047\u5230\u56f0\u96be\u65f6\u518d\u8fd4\u56de\u67e5\u9605\u3002"),(0,a.kt)("p",null,"\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"Tree"),"\u5b9e\u4f8b\u5305\u542b\u4e24\u4e2a\u5b9e\u4f8b\u5c5e\u6027\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"label")," \u662f\u5b58\u50a8\u5728\u6811\u7684\u6839\u8282\u70b9\u7684\u503c\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"branches")," \u662f\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"li"},"Tree"),"\u5b9e\u4f8b\u7684\u5217\u8868\uff0c\u5305\u542b\u4e86\u6811\u4e2d\u5176\u4ed6\u8282\u70b9\u7684\u6807\u7b7e\u3002")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Tree")," \u7c7b\uff08\u7701\u7565\u4e86 ",(0,a.kt)("inlineCode",{parentName:"p"},"__repr__")," \u548c ",(0,a.kt)("inlineCode",{parentName:"p"},"__str__")," \u65b9\u6cd5\uff09\u5b9a\u4e49\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'class Tree:\n    """\n    >>> t = Tree(3, [Tree(2, [Tree(5)]), Tree(4)])\n    >>> t.label\n    3\n    >>> t.branches[0].label\n    2\n    >>> t.branches[1].is_leaf()\n    True\n    """\n    def __init__(self, label, branches=[]):\n        for b in branches:\n            assert isinstance(b, Tree)\n        self.label = label\n        self.branches = list(branches)\n\n    def is_leaf(self):\n        return not self.branches\n')),(0,a.kt)("p",null,"\u8981\u521b\u5efa\u4e00\u4e2a",(0,a.kt)("inlineCode",{parentName:"p"},"Tree"),"\u5b9e\u4f8b\uff0c\u9700\u8981\u6307\u5b9a\u6807\u7b7e",(0,a.kt)("inlineCode",{parentName:"p"},"x"),"\uff08\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\uff09\u548c\u5206\u652f\u5217\u8868",(0,a.kt)("inlineCode",{parentName:"p"},"bs"),"\uff08",(0,a.kt)("inlineCode",{parentName:"p"},"Tree"),"\u5b9e\u4f8b\u7684\u5217\u8868\uff09\u3002\u5982\u679c\u60f3\u5c06\u8be5\u5b9e\u4f8b\u547d\u540d\u4e3a",(0,a.kt)("inlineCode",{parentName:"p"},"t"),"\uff0c\u53ef\u4ee5\u8fd9\u6837\u5199\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"t = Tree(x, bs)"),"\u3002"),(0,a.kt)("p",null,"\u5bf9\u4e8e\u6811 ",(0,a.kt)("inlineCode",{parentName:"p"},"t"),"\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u6839\u8282\u70b9\u7684\u6807\u7b7e\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"t.label")," \u7684\u503c\u5373\u4e3a\u8be5\u6807\u7b7e\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5b83\u7684\u5206\u652f\u59cb\u7ec8\u662f",(0,a.kt)("inlineCode",{parentName:"li"},"Tree"),"\u5b9e\u4f8b\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"t.branches")," \u7684\u503c\u662f\u5305\u542b\u6240\u6709\u5206\u652f\u7684",(0,a.kt)("strong",{parentName:"li"},"\u5217\u8868"),"\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5f53",(0,a.kt)("inlineCode",{parentName:"li"},"t.branches"),"\u4e3a\u7a7a\u65f6\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"t.is_leaf()")," \u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"li"},"True"),"\uff1b\u5426\u5219\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"li"},"False"),"\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u8981\u6784\u9020\u4e00\u4e2a\u6807\u7b7e\u4e3a ",(0,a.kt)("inlineCode",{parentName:"li"},"x")," \u7684\u53f6\u5b50\u8282\u70b9\uff0c\u8bf7\u7f16\u5199 ",(0,a.kt)("inlineCode",{parentName:"li"},"Tree(x)"),"\u3002")),(0,a.kt)("p",null,"\u5c55\u793a\u6811 ",(0,a.kt)("inlineCode",{parentName:"p"},"t"),"\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"repr(t)")," \u8fd4\u56de\u4e00\u4e2aPython\u8868\u8fbe\u5f0f\uff0c\u5176\u7ed3\u679c\u662f\u4e00\u4e2a\u7b49\u4ef7\u7684\u6811\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"str(t)")," \u4f1a\u4e3a\u6bcf\u4e2a\u6807\u7b7e\u751f\u6210\u4e00\u884c\uff0c\u76f8\u5bf9\u4e8e\u7236\u8282\u70b9\u7f29\u8fdb\u4e00\u7ea7\uff0c\u5b50\u8282\u70b9\u663e\u793a\u5728\u7236\u8282\u70b9\u4e0b\u65b9\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">>> t = Tree(3, [Tree(1, [Tree(4), Tree(1)]), Tree(5, [Tree(9)])])\n\n>>> t         # displays the contents of repr(t)\nTree(3, [Tree(1, [Tree(4), Tree(1)]), Tree(5, [Tree(9)])])\n\n>>> print(t)  # displays the contents of str(t)\n3\n  1\n    4\n    1\n  5\n    9\n")),(0,a.kt)("p",null,"\u4fee\u6539\uff08\u4e5f\u79f0\u4e3a\u53d8\u5f02\uff09\u6811 ",(0,a.kt)("inlineCode",{parentName:"p"},"t"),"\uff1a"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"t.label = y")," \u5c06",(0,a.kt)("inlineCode",{parentName:"li"},"t"),"\u7684\u6839\u8282\u70b9\u6807\u7b7e\u4fee\u6539\u4e3a",(0,a.kt)("inlineCode",{parentName:"li"},"y"),"\uff08\u53ef\u4ee5\u662f\u4efb\u4f55\u503c\uff09\u3002"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"t.branches = ns")," \u5c06",(0,a.kt)("inlineCode",{parentName:"li"},"t"),"\u7684\u5206\u652f\u4fee\u6539\u4e3a",(0,a.kt)("inlineCode",{parentName:"li"},"ns"),"\uff08\u4e00\u4e2a\u5305\u542b",(0,a.kt)("inlineCode",{parentName:"li"},"Tree"),"\u5b9e\u4f8b\u7684\u5217\u8868\uff09\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5bf9",(0,a.kt)("inlineCode",{parentName:"li"},"t.branches"),"\u8fdb\u884c\u53d8\u5f02\u64cd\u4f5c\u4f1a\u6539\u53d8",(0,a.kt)("inlineCode",{parentName:"li"},"t"),"\u672c\u8eab\u3002\u4f8b\u5982\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"t.branches.append(Tree(y))")," \u4f1a\u5728\u6700\u53f3\u4fa7\u6dfb\u52a0\u4e00\u4e2a\u6807\u7b7e\u4e3a",(0,a.kt)("inlineCode",{parentName:"li"},"y"),"\u7684\u53f6\u5b50\u8282\u70b9\u3002"),(0,a.kt)("li",{parentName:"ul"},"\u5bf9",(0,a.kt)("inlineCode",{parentName:"li"},"t"),"\u7684\u4efb\u4f55\u5206\u652f\u8fdb\u884c\u53d8\u5f02\u64cd\u4f5c\u90fd\u4f1a\u6539\u53d8",(0,a.kt)("inlineCode",{parentName:"li"},"t"),"\u672c\u8eab\u3002\u4f8b\u5982\uff0c",(0,a.kt)("inlineCode",{parentName:"li"},"t.branches[0].label = y")," \u4f1a\u5c06\u6700\u5de6\u4fa7\u5206\u652f\u7684\u6839\u8282\u70b9\u6807\u7b7e\u4fee\u6539\u4e3a",(0,a.kt)("inlineCode",{parentName:"li"},"y"),"\u3002")),(0,a.kt)("p",null,"\u4e0b\u8868\u603b\u7ed3\u4e86\u51fd\u6570\u5f0f\u62bd\u8c61\u5b9e\u73b0\u7684\u6811\u6570\u636e\u7ed3\u6784\u4e0e\u7c7b\u5b9e\u73b0\u7684\u6811\u6570\u636e\u7ed3\u6784\u4e4b\u95f4\u7684\u533a\u522b\uff1a"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"-"),(0,a.kt)("th",{parentName:"tr",align:null},"\u6811\u7684\u6784\u9020\u548c\u9009\u62e9\u51fd\u6570"),(0,a.kt)("th",{parentName:"tr",align:null},"\u6811\u7c7b"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"\u6784\u9020\u6811"),(0,a.kt)("td",{parentName:"tr",align:null},"\u7ed9\u5b9a",(0,a.kt)("inlineCode",{parentName:"td"},"label"),"\u548c",(0,a.kt)("inlineCode",{parentName:"td"},"branches"),"\u5217\u8868\uff0c\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"td"},"tree(label, branches)"),"\u6765\u6784\u9020\u6811"),(0,a.kt)("td",{parentName:"tr",align:null},"\u7ed9\u5b9a",(0,a.kt)("inlineCode",{parentName:"td"},"label"),"\u548c",(0,a.kt)("inlineCode",{parentName:"td"},"branches"),"\u5217\u8868\uff0c\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"td"},"Tree(label, branches)"),"\uff08\u5b9e\u9645\u8c03\u7528\u7684\u662f",(0,a.kt)("inlineCode",{parentName:"td"},"Tree.__init__"),"\u65b9\u6cd5\uff09\u6765\u6784\u9020\u6811\u5bf9\u8c61\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"\u6807\u7b7e\u548c\u5206\u652f"),(0,a.kt)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u6811",(0,a.kt)("inlineCode",{parentName:"td"},"t"),"\u7684\u6807\u7b7e\u6216\u5206\u652f\uff0c\u5206\u522b\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"td"},"label(t)"),"\u6216",(0,a.kt)("inlineCode",{parentName:"td"},"branches(t)")),(0,a.kt)("td",{parentName:"tr",align:null},"\u83b7\u53d6\u6811",(0,a.kt)("inlineCode",{parentName:"td"},"t"),"\u7684\u6807\u7b7e\u6216\u5206\u652f\uff0c\u5206\u522b\u8bbf\u95ee\u5b9e\u4f8b\u5c5e\u6027",(0,a.kt)("inlineCode",{parentName:"td"},"t.label"),"\u6216",(0,a.kt)("inlineCode",{parentName:"td"},"t.branches"),"\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"\u53ef\u53d8\u6027"),(0,a.kt)("td",{parentName:"tr",align:null},"\u51fd\u6570\u5f0f\u6811\u6570\u636e\u7ed3\u6784\u662f\u4e0d\u53ef\u53d8\u7684\uff08\u5728\u4e0d\u7834\u574f\u62bd\u8c61\u5c4f\u969c\u7684\u524d\u63d0\u4e0b\uff09\uff0c\u56e0\u4e3a\u65e0\u6cd5\u5bf9\u51fd\u6570\u8c03\u7528\u8868\u8fbe\u5f0f\u8d4b\u503c"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"Tree"),"\u5b9e\u4f8b\u7684",(0,a.kt)("inlineCode",{parentName:"td"},"label"),"\u548c",(0,a.kt)("inlineCode",{parentName:"td"},"branches"),"\u5c5e\u6027\u53ef\u4ee5\u88ab\u91cd\u65b0\u8d4b\u503c\uff0c\u4ece\u800c\u6539\u53d8\u6811\u672c\u8eab\u3002")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"\u68c0\u67e5\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9"),(0,a.kt)("td",{parentName:"tr",align:null},"\u68c0\u67e5\u6811",(0,a.kt)("inlineCode",{parentName:"td"},"t"),"\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u8c03\u7528\u51fd\u6570",(0,a.kt)("inlineCode",{parentName:"td"},"is_leaf(t)")),(0,a.kt)("td",{parentName:"tr",align:null},"\u68c0\u67e5\u6811",(0,a.kt)("inlineCode",{parentName:"td"},"t"),"\u662f\u5426\u4e3a\u53f6\u5b50\u8282\u70b9\uff0c\u8c03\u7528\u65b9\u6cd5",(0,a.kt)("inlineCode",{parentName:"td"},"t.is_leaf()"),"\u3002\u8be5\u65b9\u6cd5\u53ea\u80fd\u5728",(0,a.kt)("inlineCode",{parentName:"td"},"Tree"),"\u5bf9\u8c61\u4e0a\u8c03\u7528\u3002")))),(0,a.kt)("h2",{id:"\u5fc5\u505a\u7ec3\u4e60"},"\u5fc5\u505a\u7ec3\u4e60"),(0,a.kt)("h2",{id:"\u5165\u95e8\u6307\u5bfc\u89c6\u9891"},"\u5165\u95e8\u6307\u5bfc\u89c6\u9891"),(0,a.kt)("p",null,"\u8fd9\u4e9b\u89c6\u9891\u6216\u8bb8\u80fd\u5e2e\u4f60\u66f4\u597d\u5730\u89e3\u51b3\u8fd9\u6b21\u4f5c\u4e1a\u4e2d\u7684\u7f16\u7a0b\u95ee\u9898\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u8981\u89c2\u770b\u8fd9\u4e9b\u89c6\u9891\uff0c\u8bf7\u5148\u767b\u5f55\u4f60\u7684 berkeley.edu \u90ae\u7bb1\u3002")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/playlist?list=PLx38hZJ5RLZc8kuYZU6K1LgdeO_LSK8sL"},"YouTube \u94fe\u63a5")),(0,a.kt)("h2",{id:"\u53ef\u53d8\u6811\u7ed3\u6784"},"\u53ef\u53d8\u6811\u7ed3\u6784"),(0,a.kt)("h3",{id:"q1wwpd\u6811"},"Q1\uff1aWWPD\uff1a\u6811"),(0,a.kt)("p",null,"\u8bf7\u9605\u8bfb ",(0,a.kt)("inlineCode",{parentName:"p"},"lab08.py")," \u6587\u4ef6\u4e2d\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"Tree")," \u7c7b\u7684\u5b9a\u4e49\uff0c\u5e76\u786e\u4fdd\u7406\u89e3\u5176\u4e2d\u7684 doctests (\u6587\u6863\u6d4b\u8bd5)\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"\u4f7f\u7528 Ok \u6765\u6d4b\u8bd5\u4f60\u5bf9\u4ee5\u4e0b\u201cPython \u4f1a\u663e\u793a\u4ec0\u4e48\uff1f\u201d\u95ee\u9898\u7684\u638c\u63e1\u7a0b\u5ea6:"),(0,a.kt)("pre",{parentName:"blockquote"},(0,a.kt)("code",{parentName:"pre"},"python3 ok -q trees-wwpd -u\n")),(0,a.kt)("p",{parentName:"blockquote"},"\u5982\u679c\u7b54\u6848\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"<function ...>"),"\uff0c\u8bf7\u8f93\u5165 ",(0,a.kt)("inlineCode",{parentName:"p"},"Function"),"\uff1b\u5982\u679c\u62a5\u9519\uff0c\u8bf7\u8f93\u5165 ",(0,a.kt)("inlineCode",{parentName:"p"},"Error"),"\uff1b\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u663e\u793a\uff0c\u8bf7\u8f93\u5165 ",(0,a.kt)("inlineCode",{parentName:"p"},"Nothing"),"\u3002 \u8bf7\u6ce8\u610f\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"Tree")," \u5b9e\u4f8b\u7684\u663e\u793a\u5f62\u5f0f\u4e0e\u5176\u6784\u9020\u65b9\u5f0f\u4e00\u81f4\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},">>> t = Tree(1, Tree(2))\n______Error\n>>> t = Tree(1, [Tree(2)])\n>>> t.label\n______1\n>>> t.branches[0]\n______Tree(2)\n>>> t.branches[0].label\n______2\n>>> t.label = t.branches[0].label\n>>> t\n______Tree(2, [Tree(2)])\n>>> t.branches.append(Tree(4, [Tree(8)]))\n>>> len(t.branches)\n______2\n>>> t.branches[0]\n______Tree(2)\n>>> t.branches[1]\n______Tree(4, [Tree(8)])\n")),(0,a.kt)("h3",{id:"q2\u7d2f\u79ef\u4e58\u79ef"},"Q2\uff1a\u7d2f\u79ef\u4e58\u79ef"),(0,a.kt)("p",null,"\u7f16\u5199\u4e00\u4e2a\u540d\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"cumulative_mul")," \u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u4f1a\u4fee\u6539\u6811 ",(0,a.kt)("inlineCode",{parentName:"p"},"t"),"\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u6807\u7b7e\u66ff\u6362\u4e3a\u8be5\u8282\u70b9\u53ca\u5176\u6240\u6709\u5b50\u8282\u70b9\u6807\u7b7e\u7684\u4e58\u79ef\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a"),"\uff1a\u6ce8\u610f\u4fee\u6539\u8282\u70b9\u6807\u7b7e\u548c\u5904\u7406\u5b50\u6811\u7684\u987a\u5e8f\uff0c\u54ea\u4e2a\u5e94\u8be5\u653e\u5728\u524d\u9762\uff1f")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'def cumulative_mul(t):\n    """Mutates t so that each node\'s label becomes the product of its own\n    label and all labels in the corresponding subtree rooted at t.\n\n    >>> t = Tree(1, [Tree(3, [Tree(5)]), Tree(7)])\n    >>> cumulative_mul(t)\n    >>> t\n    Tree(105, [Tree(15, [Tree(5)]), Tree(7)])\n    >>> otherTree = Tree(2, [Tree(1, [Tree(3), Tree(4), Tree(5)]), Tree(6, [Tree(7)])])\n    >>> cumulative_mul(otherTree)\n    >>> otherTree\n    Tree(5040, [Tree(60, [Tree(3), Tree(4), Tree(5)]), Tree(42, [Tree(7)])])\n    """\n    "*** YOUR CODE HERE ***"\n\n')),(0,a.kt)("p",null,"\u4f7f\u7528 Ok \u6d4b\u8bd5\u4f60\u7684\u4ee3\u7801\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 ok -q cumulative_mul\n")),(0,a.kt)("h3",{id:"q3\u4fee\u526a\u5c0f\u6811"},"Q3\uff1a\u4fee\u526a\u5c0f\u6811"),(0,a.kt)("p",null,"\u4ece\u6811\u4e2d\u5220\u9664\u4e00\u4e9b\u8282\u70b9\u79f0\u4e3a",(0,a.kt)("em",{parentName:"p"},"\u4fee\u526a"),"\u6811\u3002"),(0,a.kt)("p",null,"\u5b8c\u6210\u51fd\u6570 ",(0,a.kt)("inlineCode",{parentName:"p"},"prune_small"),"\uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a\u6811 ",(0,a.kt)("inlineCode",{parentName:"p"},"t")," \u548c\u4e00\u4e2a\u6570\u5b57 ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," \u4f5c\u4e3a\u53c2\u6570\u3002 \u5bf9\u4e8e\u6bcf\u4e2a\u62e5\u6709\u8d85\u8fc7 ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," \u4e2a\u5206\u652f\u7684\u8282\u70b9\uff0c\u4ec5\u4fdd\u7559\u6807\u7b7e\u6700\u5c0f\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"n")," \u4e2a\u5206\u652f\uff0c\u5e76\u5220\u9664\uff08",(0,a.kt)("em",{parentName:"p"},"\u4fee\u526a"),"\uff09\u5176\u4f59\u5206\u652f\u3002"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("strong",{parentName:"p"},"\u63d0\u793a"),"\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"max")," \u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61 ",(0,a.kt)("inlineCode",{parentName:"p"},"iterable")," \u548c\u4e00\u4e2a\u53ef\u9009\u7684 ",(0,a.kt)("inlineCode",{parentName:"p"},"key")," \u53c2\u6570\uff08\u8be5\u53c2\u6570\u662f\u4e00\u4e2a\u5355\u53c2\u6570\u51fd\u6570\uff09\u3002 \u4f8b\u5982\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"max([-7, 2, -1], key=abs)")," \u4f1a\u8fd4\u56de ",(0,a.kt)("inlineCode",{parentName:"p"},"-7"),"\uff0c\u56e0\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"abs(-7)")," \u7684\u503c\u6700\u5927\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'def prune_small(t, n):\n    """Prune the tree mutatively, keeping only the n branches\n    of each node with the smallest labels.\n\n    >>> t1 = Tree(6)\n    >>> prune_small(t1, 2)\n    >>> t1\n    Tree(6)\n    >>> t2 = Tree(6, [Tree(3), Tree(4)])\n    >>> prune_small(t2, 1)\n    >>> t2\n    Tree(6, [Tree(3)])\n    >>> t3 = Tree(6, [Tree(1), Tree(3, [Tree(1), Tree(2), Tree(3)]), Tree(5, [Tree(3), Tree(4)])])\n    >>> prune_small(t3, 2)\n    >>> t3\n    Tree(6, [Tree(1), Tree(3, [Tree(1), Tree(2)])])\n    """\n    while ___________________________:\n        largest = max(_______________, key=____________________)\n        _________________________\n    for __ in _____________:\n        ___________________\n\n')),(0,a.kt)("p",null,"\u4f7f\u7528 Ok \u6d4b\u8bd5\u4f60\u7684\u4ee3\u7801\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 ok -q prune_small\n")),(0,a.kt)("h2",{id:"\u5728\u672c\u5730\u67e5\u770b\u4f60\u7684\u5206\u6570"},"\u5728\u672c\u5730\u67e5\u770b\u4f60\u7684\u5206\u6570"),(0,a.kt)("p",null,"\u4f60\u53ef\u4ee5\u901a\u8fc7\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5728\u672c\u5730\u67e5\u770b\u672c\u6b21\u4f5c\u4e1a\u4e2d\u6bcf\u4e2a\u9898\u76ee\u7684\u5f97\u5206\u60c5\u51b5"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 ok --score\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u8fd9\u4e0d\u4f1a\u63d0\u4ea4\u4f5c\u4e1a\uff01")," \u5f53\u4f60\u5bf9\u4f60\u7684\u5206\u6570\u611f\u5230\u6ee1\u610f\u65f6\uff0c\u5c06\u4f5c\u4e1a\u63d0\u4ea4\u5230 Gradescope \u4ee5\u83b7\u5f97\u5b66\u5206\u3002"),(0,a.kt)("h2",{id:"\u63d0\u4ea4"},"\u63d0\u4ea4"),(0,a.kt)("p",null,"\u8bf7\u5c06\u4f60\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\u4e0a\u4f20\u5230 Gradescope \u4e0a\u5bf9\u5e94\u7684\u4f5c\u4e1a\u63d0\u4ea4\u3002 ",(0,a.kt)("a",{parentName:"p",href:"https://cs61a.org/lab/lab00/#submit-with-gradescope"},"Lab 00")," \u5305\u542b\u8be6\u7ec6\u8bf4\u660e\u3002"),(0,a.kt)("p",null,"\u6b64\u5916\uff0c\u6240\u6709",(0,a.kt)("strong",{parentName:"p"},"\u4e0d\u5728"),"\u5927\u578b\u5b9e\u9a8c\u5ba4\u7684\u5b66\u751f\u90fd\u5fc5\u987b\u586b\u5199\u6b64",(0,a.kt)("a",{parentName:"p",href:"https://go.cs61a.org/lab-att"},"\u51fa\u52e4\u8868"),"\u3002 \u6bcf\u5468\u63d0\u4ea4\u6b64\u8868\u683c\uff0c\u65e0\u8bba\u4f60\u662f\u5426\u53c2\u52a0\u4e86\u5b9e\u9a8c\u5ba4\uff0c\u6216\u8005\u56e0\u4e3a\u6b63\u5f53\u7406\u7531\u9519\u8fc7\u4e86\u5b83\u3002 \u5927\u578b\u5b9e\u9a8c\u5ba4\u7684\u5b66\u751f\u4e0d\u9700\u8981\u586b\u5199\u51fa\u52e4\u8868\u3002"),(0,a.kt)("h2",{id:"\u53ef\u9009\u95ee\u9898"},"\u53ef\u9009\u95ee\u9898"),(0,a.kt)("h3",{id:"q4-\u5220\u9664"},"Q4: \u5220\u9664"),(0,a.kt)("p",null,"\u5b9e\u73b0\u4e00\u4e2a\u540d\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"delete")," \u7684\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u63a5\u6536\u4e00\u68f5\u6811 ",(0,a.kt)("inlineCode",{parentName:"p"},"t")," \u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u79fb\u9664\u5176\u4e2d\u6240\u6709\u503c\u4e3a ",(0,a.kt)("inlineCode",{parentName:"p"},"x")," \u7684\u975e\u6839\u8282\u70b9\u3002\u6bcf\u4e2a\u672a\u88ab\u79fb\u9664\u7684\u8282\u70b9\u7684\u7236\u8282\u70b9\uff0c\u662f\u5b83\u6700\u8fd1\u7684\u672a\u88ab\u5220\u9664\u7684\u7956\u5148\u8282\u70b9\u3002\u6839\u8282\u70b9\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u79fb\u9664\uff0c\u5373\u4f7f\u5b83\u7684\u503c\u662f ",(0,a.kt)("inlineCode",{parentName:"p"},"x"),"\u3002"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'def delete(t, x):\n    """Remove all nodes labeled x below the root within Tree t. When a non-leaf\n    node is deleted, the deleted node\'s children become children of its parent.\n\n    The root node will never be removed.\n\n    >>> t = Tree(3, [Tree(2, [Tree(2), Tree(2)]), Tree(2), Tree(2, [Tree(2, [Tree(2), Tree(2)])])])\n    >>> delete(t, 2)\n    >>> t\n    Tree(3)\n    >>> t = Tree(1, [Tree(2, [Tree(4, [Tree(2)]), Tree(5)]), Tree(3, [Tree(6), Tree(2)]), Tree(4)])\n    >>> delete(t, 2)\n    >>> t\n    Tree(1, [Tree(4), Tree(5), Tree(3, [Tree(6)]), Tree(4)])\n    >>> t = Tree(1, [Tree(2, [Tree(4), Tree(5)]), Tree(3, [Tree(6), Tree(2)]), Tree(2, [Tree(6),  Tree(2), Tree(7), Tree(8)]), Tree(4)])\n    >>> delete(t, 2)\n    >>> t\n    Tree(1, [Tree(4), Tree(5), Tree(3, [Tree(6)]), Tree(6), Tree(7), Tree(8), Tree(4)])\n    """\n    new_branches = []\n    for _________ in ________________:\n        _______________________\n        if b.label == x:\n            __________________________________\n        else:\n            __________________________________\n    t.branches = ___________________\n\n')),(0,a.kt)("p",null,"\u4f7f\u7528 Ok \u8fd0\u884c\u6d4b\u8bd5\u6765\u68c0\u67e5\u4f60\u7684\u4ee3\u7801"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 ok -q delete\n")))}u.isMDXComponent=!0},31403:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/lab08-87192e93b364c6c793876172440cb582.zip"}}]);