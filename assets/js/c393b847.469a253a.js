"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[6158],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>d});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),b=a,d=p["".concat(l,".").concat(b)]||p[b]||m[b]||i;return r?n.createElement(d,o(o({ref:t},u),{},{components:r})):n.createElement(d,o({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,o=new Array(i);o[0]=b;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}b.displayName="MDXCreateElement"},27698:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var n=r(87462),a=(r(67294),r(3905));const i={title:"FAQ - Lab08"},o=void 0,s={unversionedId:"curriculum-resource/cs61b/labs/lab08/faq",id:"curriculum-resource/cs61b/labs/lab08/faq",title:"FAQ - Lab08",description:'I\'m getting a "Generic array creation" error.',source:"@site/docs/curriculum-resource/cs61b/labs/lab08/faq.md",sourceDirName:"curriculum-resource/cs61b/labs/lab08",slug:"/curriculum-resource/cs61b/labs/lab08/faq",permalink:"/docs/curriculum-resource/cs61b/labs/lab08/faq",draft:!1,tags:[],version:"current",frontMatter:{title:"FAQ - Lab08"},sidebar:"tutorialSidebar",previous:{title:"Lab 08: Hashmaps",permalink:"/docs/curriculum-resource/cs61b/labs/lab08/"},next:{title:"Lab 09 Conway's Game of Life",permalink:"/docs/curriculum-resource/cs61b/labs/lab09/"}},l={},c=[{value:"I&#39;m getting a &quot;Generic array creation&quot; error.",id:"im-getting-a-generic-array-creation-error",level:3},{value:"Failing edge cases",id:"failing-edge-cases",level:3},{value:"I&#39;m running into issues with resizing and getting expected to be greater than this value, but was this value.",id:"im-running-into-issues-with-resizing-and-getting-expected-to-be-greater-than-this-value-but-was-this-value",level:3}],u={toc:c},p="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(p,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"im-getting-a-generic-array-creation-error"},'I\'m getting a "Generic array creation" error.'),(0,a.kt)("p",null,"Be sure to instantiate your buckets table with ",(0,a.kt)("inlineCode",{parentName:"p"},"new Collection[size]")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"(Collection<Node>[]) new Object[size]"),"!"),(0,a.kt)("h3",{id:"failing-edge-cases"},"Failing edge cases"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Bee")," class has some strange ",(0,a.kt)("inlineCode",{parentName:"p"},"equals")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"hashCode")," implementations. If you're stuck on this test, use the debugger to see what values are expected from the reference map, which is Java's built-in HashMap. Walking through the expected behavior by hand may help as well."),(0,a.kt)("p",null,"Some things to think about:"),(0,a.kt)("p",null,"The reference map has some (maybe) unexpected behaviors. ",(0,a.kt)("em",{parentName:"p"},"Why")," does the reference map behave the way it does (remember ",(0,a.kt)("inlineCode",{parentName:"p"},"equals")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"hashCode"),"!)?\nDoes your map behave the same way?"),(0,a.kt)("h3",{id:"im-running-into-issues-with-resizing-and-getting-expected-to-be-greater-than-this-value-but-was-this-value"},"I'm running into issues with resizing and getting expected to be greater than this value, but was this value."),(0,a.kt)("p",null,"For example, you might be seeing this error message:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"expected to be greater than: 16\nbut was                    : 16\n")),(0,a.kt)("p",null,"If you're running into this issue, a common problem is how the load factor is being calculated. The load\nfactor can be found by dividing the total number of elements in the hashmap divided by the total number\nof buckets - both values are commonly stored as integers, but remember, the load factor is a double.\nHow might integer division cause an error?"))}m.isMDXComponent=!0}}]);