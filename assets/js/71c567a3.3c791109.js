"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[7297],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),d=a,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||l;return n?r.createElement(h,o(o({ref:t},p),{},{components:n})):r.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:a,o[1]=i;for(var c=2;c<l;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8336:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>c});var r=n(7462),a=(n(7294),n(3905));const l={sidebar_position:2,description:"cs50x practice problem  license",title:"license"},o="License - CS50x 2023",i={unversionedId:"curriculum-resource/cs50x/lecture5/practice problems/license",id:"curriculum-resource/cs50x/lecture5/practice problems/license",title:"license",description:"cs50x practice problem  license",source:"@site/docs/curriculum-resource/cs50x/lecture5/practice problems/license.md",sourceDirName:"curriculum-resource/cs50x/lecture5/practice problems",slug:"/curriculum-resource/cs50x/lecture5/practice problems/license",permalink:"/docs/curriculum-resource/cs50x/lecture5/practice problems/license",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,description:"cs50x practice problem  license",title:"license"},sidebar:"tutorialSidebar",previous:{title:"bottomup",permalink:"/docs/curriculum-resource/cs50x/lecture5/practice problems/bottomup"},next:{title:"Lab",permalink:"/docs/curriculum-resource/cs50x/lecture5/lab"}},s={},c=[{value:"Learning Goals",id:"learning-goals",level:2},{value:"Background",id:"background",level:2},{value:"Demo",id:"demo",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Debugging",id:"debugging",level:3},{value:"Checking for Memory Leaks",id:"checking-for-memory-leaks",level:3},{value:"How to Test Your Code",id:"how-to-test-your-code",level:2},{value:"How to Submit",id:"how-to-submit",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"license---cs50x-2023"},"License - CS50x 2023"),(0,a.kt)("h2",{id:"learning-goals"},(0,a.kt)("a",{parentName:"h2",href:"#learning-goals"},"Learning Goals")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Practice working with files and file pointers"),(0,a.kt)("li",{parentName:"ul"},"More work with strings and arrays"),(0,a.kt)("li",{parentName:"ul"},"Debugging with ",(0,a.kt)("inlineCode",{parentName:"li"},"debug50")),(0,a.kt)("li",{parentName:"ul"},"Use ",(0,a.kt)("inlineCode",{parentName:"li"},"valgrind")," to check for memory leaks")),(0,a.kt)("h2",{id:"background"},(0,a.kt)("a",{parentName:"h2",href:"#background"},"Background")),(0,a.kt)("p",null,"Suppose you work for a company that develops AI-enhanced license plate recognition technology. As you develop your technology, you may want to use actual license plate numbers as test data. You have a text file with some plate numbers you want to analyze, so you first try reading from that text file and printing out the license plates, to test your file-reading logic. But when you run your program, only the last number prints 8 times! What went wrong?"),(0,a.kt)("h2",{id:"demo"},(0,a.kt)("a",{parentName:"h2",href:"#demo"},"Demo")),(0,a.kt)("h2",{id:"getting-started"},(0,a.kt)("a",{parentName:"h2",href:"#getting-started"},"Getting Started")),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Log into ",(0,a.kt)("a",{parentName:"li",href:"https://cs50.dev/"},"cs50.dev")," using your GitHub account."),(0,a.kt)("li",{parentName:"ol"},"Click inside the terminal window and execute ",(0,a.kt)("inlineCode",{parentName:"li"},"cd"),"."),(0,a.kt)("li",{parentName:"ol"},"Execute ",(0,a.kt)("inlineCode",{parentName:"li"},"wget https://cdn.cs50.net/2022/fall/labs/4/license.zip")," followed by Enter in order to download a zip called ",(0,a.kt)("inlineCode",{parentName:"li"},"license.zip")," in your codespace. Take care not to overlook the space between ",(0,a.kt)("inlineCode",{parentName:"li"},"wget")," and the following URL, or any other character for that matter!"),(0,a.kt)("li",{parentName:"ol"},"Now execute ",(0,a.kt)("inlineCode",{parentName:"li"},"unzip license.zip")," to create a folder called ",(0,a.kt)("inlineCode",{parentName:"li"},"license"),"."),(0,a.kt)("li",{parentName:"ol"},"You no longer need the ZIP file, so you can execute ",(0,a.kt)("inlineCode",{parentName:"li"},"rm license.zip")," and respond with \u201cy\u201d followed by Enter at the prompt.")),(0,a.kt)("h2",{id:"implementation-details"},(0,a.kt)("a",{parentName:"h2",href:"#implementation-details"},"Implementation Details")),(0,a.kt)("p",null,"If you open the ",(0,a.kt)("inlineCode",{parentName:"p"},"plates.txt")," file, you\u2019ll notice that there are actually 8 different license plate numbers. There are a few errors in the distribution code that are causing this to happen. Let\u2019s start by walking through the code."),(0,a.kt)("p",null,"We first check for command-line arguments, since ",(0,a.kt)("inlineCode",{parentName:"p"},"argv[1]")," should be the text file that contains the license plates. We then create a character array of length 7, since the plate numbers are 6 ",(0,a.kt)("inlineCode",{parentName:"p"},"char"),"s long and we need to save space for the NUL terminator. Now we create an array of ",(0,a.kt)("inlineCode",{parentName:"p"},"char *"),"\u2019s (character pointers, otherwise known as ",(0,a.kt)("inlineCode",{parentName:"p"},"string"),"s!) to store the 8 plate numbers. We create a file pointer to our external text file, create a variable to hold the index of each array element, and begin reading the file and saving the plate numbers to the array. Finally, to test that we did this correctly, we print out the values in the array."),(0,a.kt)("p",null,"However, when we compile and execute this code, something is clearly wrong. You\u2019ll need to make the appropriate corrections!"),(0,a.kt)("h3",{id:"debugging"},(0,a.kt)("a",{parentName:"h3",href:"#debugging"},"Debugging")),(0,a.kt)("p",null,"Take a close look at what values are actually being added to the array. You can experiment with ",(0,a.kt)("inlineCode",{parentName:"p"},"debug50")," to find the error in the distribution code."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Hints"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"What exactly does the variable ",(0,a.kt)("inlineCode",{parentName:"li"},"buffer")," hold that\u2019s being assigned to each element of the ",(0,a.kt)("inlineCode",{parentName:"li"},"plates")," array?"),(0,a.kt)("li",{parentName:"ul"},"Note that the ",(0,a.kt)("inlineCode",{parentName:"li"},"plates")," array as an array of ",(0,a.kt)("inlineCode",{parentName:"li"},"char *"),"\u2019s or string pointers."),(0,a.kt)("li",{parentName:"ul"},"So when we assign the char array ",(0,a.kt)("inlineCode",{parentName:"li"},"buffer")," to a ",(0,a.kt)("inlineCode",{parentName:"li"},"char *"),", what actually happens?")))),(0,a.kt)("p",null,"Is there a better way to copy license plate numbers to the ",(0,a.kt)("inlineCode",{parentName:"p"},"license")," array?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"More Hints"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Would ",(0,a.kt)("inlineCode",{parentName:"li"},"strcpy")," come in useful here?"),(0,a.kt)("li",{parentName:"ul"},"If you copy data to a pointer, where will that data go?"),(0,a.kt)("li",{parentName:"ul"},"Is ",(0,a.kt)("inlineCode",{parentName:"li"},"malloc")," required here?")))),(0,a.kt)("h3",{id:"checking-for-memory-leaks"},(0,a.kt)("a",{parentName:"h3",href:"#checking-for-memory-leaks"},"Checking for Memory Leaks")),(0,a.kt)("p",null,"Once your program seems to be working properly, run valgrind to make sure there are no memory leaks."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"valgrind ./license plates.txt\n\n")),(0,a.kt)("p",null,"You may end up with something like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"==24478== HEAP SUMMARY:\n==24478==     in use at exit: 528 bytes in 9 blocks\n==24478==   total heap usage: 10 allocs, 1 frees, 4,624 bytes allocated\n==24478== \n==24478== 56 bytes in 8 blocks are definitely lost in loss record 1 of 2\n==24478==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\n==24478==    by 0x109207: main (license.c:30)\n==24478== \n==24478== 472 bytes in 1 blocks are still reachable in loss record 2 of 2\n==24478==    at 0x4848899: malloc (in /usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so)\n==24478==    by 0x4A086CD: __fopen_internal (iofopen.c:65)\n==24478==    by 0x4A086CD: fopen@@GLIBC_2.2.5 (iofopen.c:86)\n==24478==    by 0x1091CD: main (license.c:20)\n==24478== \n==24478== LEAK SUMMARY:\n==24478==    definitely lost: 56 bytes in 8 blocks\n==24478==    indirectly lost: 0 bytes in 0 blocks\n==24478==      possibly lost: 0 bytes in 0 blocks\n==24478==    still reachable: 472 bytes in 1 blocks\n==24478==         suppressed: 0 bytes in 0 blocks\n==24478== \n==24478== For lists of detected and suppressed errors, rerun with: -s\n==24478== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)\n\n")),(0,a.kt)("p",null,"There seem to be two kinds of memory errors here that need to be corrected!"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Hint"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Your line numbers may be different, but note here that there seems to be a memory problem in ",(0,a.kt)("inlineCode",{parentName:"li"},"main")," on line 30 (something to do with ",(0,a.kt)("inlineCode",{parentName:"li"},"malloc"),"?), and line 20 (a problem related to ",(0,a.kt)("inlineCode",{parentName:"li"},"fopen"),"?). What might the distribution code be missing?")))),(0,a.kt)("h2",{id:"how-to-test-your-code"},(0,a.kt)("a",{parentName:"h2",href:"#how-to-test-your-code"},"How to Test Your Code")),(0,a.kt)("p",null,"Your program should behave per the examples below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"license/ $ ./license plates.txt\n11ZT00\n1KAD21\n78ZZ01\n99ZZ11\n72ZZ21\n98ZZ31\n44ZW41\n34ZZ51\n\n")),(0,a.kt)("p",null,"You can check your code using ",(0,a.kt)("inlineCode",{parentName:"p"},"check50"),", a program that CS50 will use to test your code when you submit, by typing in the following at the ",(0,a.kt)("inlineCode",{parentName:"p"},"$")," prompt. But be sure to test it yourself as well!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"check50 cs50/labs/2023/x/license\n\n")),(0,a.kt)("p",null,"To evaluate that the style of your code, type in the following at the ",(0,a.kt)("inlineCode",{parentName:"p"},"$")," prompt."),(0,a.kt)("h2",{id:"how-to-submit"},(0,a.kt)("a",{parentName:"h2",href:"#how-to-submit"},"How to Submit")),(0,a.kt)("p",null,"No need to submit! This is a practice problem."))}m.isMDXComponent=!0}}]);