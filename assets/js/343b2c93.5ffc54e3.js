"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[58985],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),d=a,h=p["".concat(l,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},23419:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"Homework 9 Solutions"},i="Homework 9 Solutions | CS 61A Spring 2024",s={unversionedId:"curriculum-resource/cs61a/cs61a_en/homework/sol-hw09",id:"curriculum-resource/cs61a/cs61a_en/homework/sol-hw09",title:"Homework 9 Solutions",description:"Homework 9 Solutions",source:"@site/docs/curriculum-resource/cs61a/cs61a_en/homework/sol-hw09.md",sourceDirName:"curriculum-resource/cs61a/cs61a_en/homework",slug:"/curriculum-resource/cs61a/cs61a_en/homework/sol-hw09",permalink:"/docs/curriculum-resource/cs61a/cs61a_en/homework/sol-hw09",draft:!1,tags:[],version:"current",frontMatter:{title:"Homework 9 Solutions"},sidebar:"tutorialSidebar",previous:{title:"Homework 8 Solutions",permalink:"/docs/curriculum-resource/cs61a/cs61a_en/homework/sol-hw08"},next:{title:"Homework 10 Solutions",permalink:"/docs/curriculum-resource/cs61a/cs61a_en/homework/sol-hw10"}},l={},c=[{value:"Homework 9 Solutions",id:"homework-9-solutions",level:2},{value:"Solution Files",id:"solution-files",level:2},{value:"Scheme Editor",id:"scheme-editor",level:3},{value:"Recommended VS Code Extensions",id:"recommended-vs-code-extensions",level:3},{value:"Required Questions",id:"required-questions",level:2},{value:"Getting Started Videos",id:"getting-started-videos",level:2},{value:"Programs as Data: Chef Curry",id:"programs-as-data-chef-curry",level:2},{value:"Q1: Cooking Curry",id:"q1-cooking-curry",level:3},{value:"Q2: Consuming Curry",id:"q2-consuming-curry",level:3},{value:"Macros",id:"macros",level:2},{value:"Q3: Switch to Cond",id:"q3-switch-to-cond",level:3},{value:"Check Your Score Locally",id:"check-your-score-locally",level:2},{value:"Submit",id:"submit",level:2},{value:"Exam Practice",id:"exam-practice",level:2}],u={toc:c},p="wrapper";function m(e){let{components:t,...o}=e;return(0,a.kt)(p,(0,r.Z)({},u,o,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"homework-9-solutions--cs-61a-spring-2024"},"Homework 9 Solutions | CS 61A Spring 2024"),(0,a.kt)("h2",{id:"homework-9-solutions"},"Homework 9 Solutions"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{target:"_blank",href:n(13332).Z},"hw09.zip"))),(0,a.kt)("h2",{id:"solution-files"},"Solution Files"),(0,a.kt)("p",null,"You can find the solutions in ",(0,a.kt)("a",{parentName:"p",href:"https://cs61a.org//hw/sol-hw09/hw09.scm"},"hw09.scm"),"."),(0,a.kt)("p",null,"The 61A Scheme interpreter is included in each Scheme assignment. To start it, type ",(0,a.kt)("inlineCode",{parentName:"p"},"python3 scheme")," in a terminal. To load a Scheme file called ",(0,a.kt)("inlineCode",{parentName:"p"},"f.scm"),", type ",(0,a.kt)("inlineCode",{parentName:"p"},"python3 scheme -i f.scm"),". To exit the Scheme interpreter, type ",(0,a.kt)("inlineCode",{parentName:"p"},"(exit)"),"."),(0,a.kt)("h3",{id:"scheme-editor"},"Scheme Editor"),(0,a.kt)("p",null,"All Scheme assignments include a web-based editor that makes it easy to run ok tests and visualize environments. Type ",(0,a.kt)("inlineCode",{parentName:"p"},"python3 editor")," in a terminal, and the editor will open in a browser window (at ",(0,a.kt)("inlineCode",{parentName:"p"},"http://127.0.0.1:31415/"),"). To stop running the editor and return to the command line, type ",(0,a.kt)("inlineCode",{parentName:"p"},"Ctrl-C")," in the terminal where you started the editor."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Run")," button loads the current assignment's ",(0,a.kt)("inlineCode",{parentName:"p"},".scm")," file and opens a Scheme interpreter, allowing you to try evaluating different Scheme expressions."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"Test")," button runs all ok tests for the assignment. Click ",(0,a.kt)("inlineCode",{parentName:"p"},"View Case")," for a failed test, then click ",(0,a.kt)("inlineCode",{parentName:"p"},"Debug")," to step through its evaluation."),(0,a.kt)("h3",{id:"recommended-vs-code-extensions"},"Recommended VS Code Extensions"),(0,a.kt)("p",null,"If you choose to use VS Code as your text editor (instead of the web-based editor), install the ",(0,a.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=sjhuangx.vscode-scheme"},"vscode-scheme")," extension so that parentheses are highlighted."),(0,a.kt)("p",null,"Before:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(71162).Z,width:"662",height:"188"})),(0,a.kt)("p",null,"After:"),(0,a.kt)("p",null,(0,a.kt)("img",{src:n(23004).Z,width:"678",height:"184"})),(0,a.kt)("p",null,"In addition, the 61a-bot (",(0,a.kt)("a",{parentName:"p",href:"https://cs61a.org/articles/61a-bot"},"installation instructions"),") VS Code extension is available for Scheme homeworks. The bot is also integrated into ",(0,a.kt)("inlineCode",{parentName:"p"},"ok"),"."),(0,a.kt)("h2",{id:"required-questions"},"Required Questions"),(0,a.kt)("h2",{id:"getting-started-videos"},"Getting Started Videos"),(0,a.kt)("p",null,"These videos may provide some helpful direction for tackling the coding problems on this assignment."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"To see these videos, you should be logged into your berkeley.edu email.")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/playlist?list=PLx38hZJ5RLZcRCa7WhQVKh5s5ZLfGV9hc"},"YouTube link")),(0,a.kt)("h2",{id:"programs-as-data-chef-curry"},"Programs as Data: Chef Curry"),(0,a.kt)("p",null,"Recall that currying transforms a multiple argument function into a series of higher-order, one argument functions. In the next set of questions, you will be creating functions that can automatically curry a function of any length using the notion that programs are data!"),(0,a.kt)("h3",{id:"q1-cooking-curry"},"Q1: Cooking Curry"),(0,a.kt)("p",null,"Implement the function ",(0,a.kt)("inlineCode",{parentName:"p"},"curry-cook"),", which takes in a Scheme list ",(0,a.kt)("inlineCode",{parentName:"p"},"formals")," and a quoted expression ",(0,a.kt)("inlineCode",{parentName:"p"},"body"),". ",(0,a.kt)("inlineCode",{parentName:"p"},"curry-cook")," should generate a program as a list which is a curried version of a lambda function. The outputted program should be a curried version of a lambda function with formal arguments equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"formals"),", and a function body equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"body"),". You may assume that all functions passed in will have more than 0 ",(0,a.kt)("inlineCode",{parentName:"p"},"formals"),"; otherwise, it would not be curry-able!"),(0,a.kt)("p",null,"For example, if you wanted to curry the function ",(0,a.kt)("inlineCode",{parentName:"p"},"(lambda (x y) (+ x y))"),", you would set ",(0,a.kt)("inlineCode",{parentName:"p"},"formals")," equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"'(x y)"),", the ",(0,a.kt)("inlineCode",{parentName:"p"},"body")," equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"'(+ x y)"),", and make a call to ",(0,a.kt)("inlineCode",{parentName:"p"},"curry-cook"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"(curry-cook '(x y) '(+ x y))"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"scm> (curry-cook '(a) 'a)\n(lambda (a) a)\nscm> (curry-cook '(x y) '(+ x y))\n(lambda (x) (lambda (y) (+ x y)))\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(define (curry-cook formals body)\n    (if (null? formals)\n        body\n        `(lambda (,(car formals)) ,(curry-cook (cdr formals) body))\n    ))\n")),(0,a.kt)("p",null,"Use Ok to test your code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 ok -q curry-cook\n")),(0,a.kt)("h3",{id:"q2-consuming-curry"},"Q2: Consuming Curry"),(0,a.kt)("p",null,"Implement the function ",(0,a.kt)("inlineCode",{parentName:"p"},"curry-consume"),", which takes in a curried lambda function ",(0,a.kt)("inlineCode",{parentName:"p"},"curry")," and applies the function to a list of arguments ",(0,a.kt)("inlineCode",{parentName:"p"},"args"),". You may make the following assumptions:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"If ",(0,a.kt)("inlineCode",{parentName:"li"},"curry")," is an ",(0,a.kt)("inlineCode",{parentName:"li"},"n"),"-","curried function, then there will be at most ",(0,a.kt)("inlineCode",{parentName:"li"},"n")," arguments in ",(0,a.kt)("inlineCode",{parentName:"li"},"args"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"If there are 0 arguments")," (",(0,a.kt)("inlineCode",{parentName:"li"},"args")," is an empty list), then you may assume that ",(0,a.kt)("inlineCode",{parentName:"li"},"curry")," has been fully applied with relevant arguments; in this case, ",(0,a.kt)("inlineCode",{parentName:"li"},"curry")," now contains a value representing the output of the lambda function. Return it.")),(0,a.kt)("p",null,"Note that there can be fewer ",(0,a.kt)("inlineCode",{parentName:"p"},"args")," than ",(0,a.kt)("inlineCode",{parentName:"p"},"formals")," for the corresponding lambda function ",(0,a.kt)("inlineCode",{parentName:"p"},"curry"),"! In the case that there are fewer arguments, ",(0,a.kt)("inlineCode",{parentName:"p"},"curry-consume")," should return a curried lambda function, which is the result of partially applying ",(0,a.kt)("inlineCode",{parentName:"p"},"curry")," up to the number of ",(0,a.kt)("inlineCode",{parentName:"p"},"args")," provdied. See the doctests below for a few examples."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"scm> (define three-curry (lambda (x) (lambda (y) (lambda (z) (+ x (* y z)))) ))\nthree-curry\nscm> (define eat-two (curry-consume three-curry '(1 2))) ; pass in only two arguments, return should be a one-arg lambda function!\neat-two\nscm> eat-two\n(lambda (z) (+ x (* y z)))\nscm> (eat-two 3) ; pass in the last argument; 1 + (2 * 3)\n7\nscm> (curry-consume three-curry '(1 2 3)) ; all three arguments at once\n7\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(define (curry-consume curry args)\n    (if (null? args)\n        curry\n        (curry-consume (curry (car args)) (cdr args))\n    ))\n")),(0,a.kt)("p",null,"Use Ok to test your code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 ok -q curry-consume\n")),(0,a.kt)("h2",{id:"macros"},"Macros"),(0,a.kt)("h3",{id:"q3-switch-to-cond"},"Q3: Switch to Cond"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"switch")," is a macro that takes in an expression ",(0,a.kt)("inlineCode",{parentName:"p"},"expr")," and a list of pairs, ",(0,a.kt)("inlineCode",{parentName:"p"},"options"),", where the first element of each pair is some value and the second element is a single expression. ",(0,a.kt)("inlineCode",{parentName:"p"},"switch")," evaluates the expression contained in the list of ",(0,a.kt)("inlineCode",{parentName:"p"},"options")," that corresponds to the value that ",(0,a.kt)("inlineCode",{parentName:"p"},"expr")," evaluates to."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"scm> (switch (+ 1 1) ((1 (print 'a))\n                      (2 (print 'b)) ; (print 'b) is evaluated because (+ 1 1) evaluates to 2\n                      (3 (print 'c))))\nb\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"switch")," uses another procedure called ",(0,a.kt)("inlineCode",{parentName:"p"},"switch-to-cond")," in its implementation:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"scm> (define-macro (switch expr options)\n                   (switch-to-cond (list 'switch expr options))\n     )\n")),(0,a.kt)("p",null,"Your task is to define ",(0,a.kt)("inlineCode",{parentName:"p"},"switch-to-cond"),", which is a procedure (not a macro) that takes a quoted ",(0,a.kt)("inlineCode",{parentName:"p"},"switch")," expression and converts it into a ",(0,a.kt)("inlineCode",{parentName:"p"},"cond")," expression with the same behavior. An example is shown below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"scm> (switch-to-cond `(switch (+ 1 1) ((1 2) (2 4) (3 6))))\n(cond ((equal? (+ 1 1) 1) 2) ((equal? (+ 1 1) 2) 4) ((equal? (+ 1 1) 3) 6))\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"(define-macro (switch expr options) (switch-to-cond (list 'switch expr options)))\n\n(define (switch-to-cond switch-expr)\n  (cons 'cond    (map\n      (lambda (option) (cons `(equal? ,(car (cdr switch-expr)) ,(car option)) (cdr option)))      (car (cdr (cdr switch-expr))))))\n")),(0,a.kt)("p",null,"Use Ok to test your code:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 ok -q switch-to-cond\n")),(0,a.kt)("h2",{id:"check-your-score-locally"},"Check Your Score Locally"),(0,a.kt)("p",null,"You can locally check your score on each question of this assignment by running"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"python3 ok --score\n")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"This does NOT submit the assignment!")," When you are satisfied with your score, submit the assignment to Gradescope to receive credit for it."),(0,a.kt)("h2",{id:"submit"},"Submit"),(0,a.kt)("p",null,"Submit this assignment by uploading any files you've edited ",(0,a.kt)("strong",{parentName:"p"},"to the appropriate Gradescope assignment.")," ",(0,a.kt)("a",{parentName:"p",href:"https://cs61a.org/lab/lab00/#submit-with-gradescope"},"Lab 00")," has detailed instructions."),(0,a.kt)("p",null,"In addition, all students who are ",(0,a.kt)("strong",{parentName:"p"},"not")," in the mega lab must complete this ",(0,a.kt)("a",{parentName:"p",href:"https://go.cs61a.org/lab-att"},"attendance form"),". Submit this form each week, whether you attend lab or missed it for a good reason. The attendance form is not required for mega section students."),(0,a.kt)("h2",{id:"exam-practice"},"Exam Practice"),(0,a.kt)("p",null,"Homework assignments will also contain prior exam questions for you to try. These questions have no submission component; feel free to attempt them if you'd like some practice!"),(0,a.kt)("p",null,"Macros"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Fall 2019 Final Q9: ",(0,a.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/fa19/final/61a-fa19-final.pdf#page=10"},"Macro Lens")),(0,a.kt)("li",{parentName:"ol"},"Summer 2019 Final Q10c: ",(0,a.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/su19/final/61a-su19-final.pdf#page=10"},"Slice")),(0,a.kt)("li",{parentName:"ol"},"Spring 2019 Final Q8: ",(0,a.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/sp19/final/61a-sp19-final.pdf#page=8"},"Macros"))))}m.isMDXComponent=!0},13332:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/files/hw09-79d4a7fb62d63538c4cff2da66480a98.zip"},23004:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/after-49c28554ee03a6642fe04e111fd59fd5.png"},71162:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/before-1fb62971706b817f8b61c7a23705e08a.png"}}]);