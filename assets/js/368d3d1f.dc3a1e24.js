"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[7523],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,m=u["".concat(s,".").concat(d)]||u[d]||h[d]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},32666:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(87462),r=(n(67294),n(3905));const i={title:"Lab 1: Caesar Cipher (Old)"},o=void 0,l={unversionedId:"curriculum-resource/cs61b/labs/lab01/caesar-cipher-old/index",id:"curriculum-resource/cs61b/labs/lab01/caesar-cipher-old/index",title:"Lab 1: Caesar Cipher (Old)",description:"This lab was replaced due to a restructuring in the first couple weeks. The",source:"@site/docs/curriculum-resource/cs61b/labs/lab01/caesar-cipher-old/index.md",sourceDirName:"curriculum-resource/cs61b/labs/lab01/caesar-cipher-old",slug:"/curriculum-resource/cs61b/labs/lab01/caesar-cipher-old/",permalink:"/docs/curriculum-resource/cs61b/labs/lab01/caesar-cipher-old/",draft:!1,tags:[],version:"current",frontMatter:{title:"Lab 1: Caesar Cipher (Old)"},sidebar:"tutorialSidebar",previous:{title:"Lab 01 Setup",permalink:"/docs/curriculum-resource/cs61b/labs/lab01/"},next:{title:"FAQ",permalink:"/docs/curriculum-resource/cs61b/labs/lab01/faq"}},s={},p=[{value:"IntelliJ Test",id:"intellij-test",level:3},{value:"Programming Exercise: <code>CaesarCipher</code>",id:"programming-exercise-caesarcipher",level:2},{value:"Background",id:"background",level:3},{value:"Methods to Implement",id:"methods-to-implement",level:3},{value:"Testing Your Code",id:"testing-your-code",level:3}],c={toc:p},u="wrapper";function h(e){let{components:t,...i}=e;return(0,r.kt)(u,(0,a.Z)({},c,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This lab was replaced due to a restructuring in the first couple weeks. The\nspec is preserved here."),(0,r.kt)("h3",{id:"intellij-test"},"IntelliJ Test"),(0,r.kt)("p",null,"To test if everything is working correctly, run the ",(0,r.kt)("inlineCode",{parentName:"p"},"CaesarCipher")," class, as\nshown below:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"caesar main",src:n(6261).Z,width:"768",height:"347"}),'{: style="max-height: 300;" }'),(0,r.kt)("p",null,'You should see a console pop up, prompting you to "Type text to encrypt":'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"caesar prompt",src:n(61625).Z,width:"611",height:"266"}),'{: style="max-height: 300;" }'),(0,r.kt)("p",null,"You can click the red square to terminate the program."),(0,r.kt)("h2",{id:"programming-exercise-caesarcipher"},"Programming Exercise: ",(0,r.kt)("inlineCode",{parentName:"h2"},"CaesarCipher")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"This exercise relies on some material from HW 0. If you have not written Java\nbefore, we strongly recommend reading HW 0 before this part. We encourage\nyou to ask for help on HW 0 concepts during lab.")),(0,r.kt)("h3",{id:"background"},"Background"),(0,r.kt)("p",null,"A ",(0,r.kt)("strong",{parentName:"p"},"cipher")," is an ",(0,r.kt)("em",{parentName:"p"},"algorithm"),' for encrypting or decrypting text. Generally, we\ncall the unencrypted text "plain text" and encrypted version "cipher text".'),(0,r.kt)("p",null,"Here is an example of text that uses a Caesar cipher (which you will implement\nin this lab):"),(0,r.kt)("p",null,'{: style="text-align: center; width: fit-content;" }\n| Plain Text | Shift | Cipher Text |\n| ------------ | ----- | ------------- |\n| ',(0,r.kt)("inlineCode",{parentName:"p"},"java is fun")," | +8 | ",(0,r.kt)("inlineCode",{parentName:"p"},"sjej rb odw")," |"),(0,r.kt)("p",null,"Notably, the original text is readable, but the encrypted version is not."),(0,r.kt)("p",null,'A Caesar cipher is computed by "shifting" each letter of the text some number\nof spaces forward in the English alphabet, wrapping around at the end, as though\nit was written in a circle. For example, the following "ring" represents a\nmapping for a Caesar cipher with each outside letter shifted forward by 4 to\nget the inside letter.'),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"caesar cipher circle",src:n(16978).Z,width:"610",height:"770"}),'{: style="max-height: 325;" }'),(0,r.kt)("p",null,"In this lab, you'll be editing the ",(0,r.kt)("inlineCode",{parentName:"p"},"CaesarCipher.java")," file, which has\nempty methods for you to fill in. We will provide you Python code for these\nmethods. You might find HW 0, which compares Python and java syntax, to be\nhelpful. We recommend completing HW 0 before working on this part of the lab."),(0,r.kt)("p",null,"Our goal is to be able to take in a piece of text, the number of letters to\nshift forward by, and output the encrypted text. We've provided a small ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"\nmethod that will take input from the console. You don't have to understand how\nit works, however."),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"In Python, there is only one way to represent strings of length one; however,\nin Java, there are two. First, we can represent them as a ",(0,r.kt)("inlineCode",{parentName:"p"},"String"),", similar to\nPython ",(0,r.kt)("inlineCode",{parentName:"p"},"str"),". Second, there is a separate type called ",(0,r.kt)("inlineCode",{parentName:"p"},"char"),". The reason for\nthis distinction is that, because we require types in Java, it is useful to be\nable to specify that we\u2019re working with a single letter. Unlike in Python,\n",(0,r.kt)("inlineCode",{parentName:"p"},"String"),"s in Java must use double quotes (",(0,r.kt)("inlineCode",{parentName:"p"},'\\"'),") and ",(0,r.kt)("inlineCode",{parentName:"p"},"char"),"s must use single\nquotes (",(0,r.kt)("inlineCode",{parentName:"p"},"'"),").")),(0,r.kt)("h3",{id:"methods-to-implement"},"Methods to Implement"),(0,r.kt)("p",null,"The first function you should implement is ",(0,r.kt)("inlineCode",{parentName:"p"},"findIndexInAlphabet"),"."),(0,r.kt)("p",null,"{: .function-info.block}\n",(0,r.kt)("inlineCode",{parentName:"p"},"public static int findIndexInAlphabet(char c)")),(0,r.kt)("div",{markdown:"block"},(0,r.kt)("p",null,"You should loop through the valid indices of ",(0,r.kt)("inlineCode",{parentName:"p"},"ALPHABET")," and return the index\nequal to the input character ",(0,r.kt)("inlineCode",{parentName:"p"},"c")," if one exists. If no such index exists, you\nshould return ",(0,r.kt)("inlineCode",{parentName:"p"},"-1"),"."),(0,r.kt)("hr",null),(0,r.kt)("p",null,"In Python, this method might approximately look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def findIndexInAlphabet(c):\n    for i in range(len(ALPHABET)):\n        if ALPHABET[i] == c:\n            return i\n    return -1\n"))),(0,r.kt)("p",null,"In Python, you can't have two methods named the same thing. However, in Java,\nwe can! This is called ",(0,r.kt)("strong",{parentName:"p"},"method overloading"),", and works because the ",(0,r.kt)("strong",{parentName:"p"},"types of\nthe arguments")," are different. Next, you will implement two versions of the\n",(0,r.kt)("inlineCode",{parentName:"p"},"rotate")," method: one for if we want to rotate a ",(0,r.kt)("inlineCode",{parentName:"p"},"char")," (character), then another\nfor rotating a String."),(0,r.kt)("p",null,"{: .function-info.block}\n",(0,r.kt)("inlineCode",{parentName:"p"},"public static int rotate(char c, int amount)")),(0,r.kt)("div",{markdown:"block"},(0,r.kt)("p",null,"Convert the input character into a number. Then, add the rotation amount to\nthat number, making sure to wrap the number around so it is between ",(0,r.kt)("inlineCode",{parentName:"p"},"0")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"25"),", the valid indices for the alphabet. Then, convert it back to a character.\nIf the character doesn't appear in the alphabet, return the character directly."),(0,r.kt)("hr",null),(0,r.kt)("p",null,"In Python, this method would approximately look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"def rot(c, amount):\n    idx = findIndexInAlphabet(c)\n    if idx == -1:\n        return c\n    newIdx = (idx + amount) % len(ALPHABET)\n    return ALPHABET[newIdx]\n"))),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," version is the one that we call in ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"."),(0,r.kt)("p",null,"{: .function-info.block}\n",(0,r.kt)("inlineCode",{parentName:"p"},"public static int rotate(String line, int amount)")),(0,r.kt)("div",{markdown:"block"},(0,r.kt)("p",null,"Rotate each character by the rotation ",(0,r.kt)("inlineCode",{parentName:"p"},"amount"),", and return a new ",(0,r.kt)("inlineCode",{parentName:"p"},"String")," made\nup of the rotated characters."),(0,r.kt)("hr",null),(0,r.kt)("p",null,"In Python, this method would approximately look like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'def rot(line, amount):\n    output = ""\n    for c in line:\n        output += rot(c, n)\n    return output\n'))),(0,r.kt)("h3",{id:"testing-your-code"},"Testing Your Code"),(0,r.kt)("p",null,"While we could run the ",(0,r.kt)("inlineCode",{parentName:"p"},"CaesarCipher")," file again and again to check that our\ncode works correctly, it would take a lot of time to type into the program each\ntime, and manually check that the output is correct. Instead, we use ",(0,r.kt)("strong",{parentName:"p"},"tests"),"."),(0,r.kt)("p",null,"Open ",(0,r.kt)("inlineCode",{parentName:"p"},"CaesarCipherTests.java"),", and click the green triangle next to the\n",(0,r.kt)("inlineCode",{parentName:"p"},"public class CaesarCipherTests"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"caesar run rests",src:n(14033).Z,width:"636",height:"227"}),'{: style="max-height: 200;" }'),(0,r.kt)("p",null,"This will run the tests that we have provided in this assignment. If you have\ncorrectly implemented the functions, all the tests will pass with a green\ncheckmark:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"caesar passed tests",src:n(19424).Z,width:"765",height:"261"}),'{: style="max-height: 200;" }'),(0,r.kt)("p",null,"If you don't pass some tests, you'll see either a red exclamation point or a\nyellow ",(0,r.kt)("inlineCode",{parentName:"p"},"x"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"caesar failed tests",src:n(98619).Z,width:"952",height:"280"}),'{: style="max-height: 200;" }'),(0,r.kt)("p",null,"To debug, click the dropdowns to see the output from a specific failing test.\nThen, read the error to figure out why the bug might have occurred!"))}h.isMDXComponent=!0},61625:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/caesar_prompt-f196523030e48b0e1df7f3fc399228ea.png"},14033:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/caesar_run_tests-2d62e1cd6adb25290d5aeb9645ef7da2.png"},98619:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/caesar_tests_failed-f860e74fae77e563787adfd44469859e.png"},19424:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/caesar_tests_passed-67dfaa17dbb28409939e5c1e7f1f830b.png"},16978:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/circle-f37896b2b5f69db0c711711a1fda844c.png"},6261:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/run_main-eb9622a6e10c801df183e93124a210e4.png"}}]);