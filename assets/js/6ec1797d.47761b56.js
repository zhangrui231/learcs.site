"use strict";(self.webpackChunklearncs_set=self.webpackChunklearncs_set||[]).push([[9512],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=u(n),k=i,m=c["".concat(l,".").concat(k)]||c[k]||d[k]||r;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=k;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[c]="string"==typeof e?e:i,o[1]=s;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},93532:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(87462),i=(n(67294),n(3905));const r={title:"Homework 6 OOP, Linked Lists"},o="Homework 6 | CS 61A Spring 2024",s={unversionedId:"curriculum-resource/cs61a/homework/hw06",id:"curriculum-resource/cs61a/homework/hw06",title:"Homework 6 OOP, Linked Lists",description:"Homework 6: OOP, Linked Lists",source:"@site/docs/curriculum-resource/cs61a/homework/hw06.md",sourceDirName:"curriculum-resource/cs61a/homework",slug:"/curriculum-resource/cs61a/homework/hw06",permalink:"/docs/curriculum-resource/cs61a/homework/hw06",draft:!1,tags:[],version:"current",frontMatter:{title:"Homework 6 OOP, Linked Lists"},sidebar:"tutorialSidebar",previous:{title:"Homework 5 Generators",permalink:"/docs/curriculum-resource/cs61a/homework/hw05"},next:{title:"Homework 7 Scheme",permalink:"/docs/curriculum-resource/cs61a/homework/hw07"}},l={},u=[{value:"Homework 6: OOP, Linked Lists",id:"homework-6-oop-linked-lists",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Required Questions",id:"required-questions",level:2},{value:"Getting Started Videos",id:"getting-started-videos",level:2},{value:"Midsemester Survey",id:"midsemester-survey",level:2},{value:"Q1: Mid-Semester Feedback",id:"q1-mid-semester-feedback",level:3},{value:"OOP",id:"oop",level:2},{value:"Q2: Vending Machine",id:"q2-vending-machine",level:3},{value:"Check Your Score Locally",id:"check-your-score-locally",level:2},{value:"Submit",id:"submit",level:2},{value:"Optional Questions",id:"optional-questions",level:2},{value:"Q3: Store Digits",id:"q3-store-digits",level:3},{value:"Q4: Mutable Mapping",id:"q4-mutable-mapping",level:3},{value:"Q5: Two List",id:"q5-two-list",level:3},{value:"Exam Practice",id:"exam-practice",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,i.kt)(c,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"homework-6--cs-61a-spring-2024"},"Homework 6 | CS 61A Spring 2024"),(0,i.kt)("h2",{id:"homework-6-oop-linked-lists"},"Homework 6: OOP, Linked Lists"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{target:"_blank",href:n(86992).Z},"hw06.zip"))),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"Due by 11:59pm on Thursday, March 14")),(0,i.kt)("h2",{id:"instructions"},"Instructions"),(0,i.kt)("p",null,"Download ",(0,i.kt)("a",{target:"_blank",href:n(86992).Z},"hw06.zip"),". Inside the archive, you will find a file called ",(0,i.kt)("a",{parentName:"p",href:"https://cs61a.org//hw/hw06/hw06.py"},"hw06.py"),", along with a copy of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ok")," autograder."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Submission:")," When you are done, submit the assignment by uploading all code files you've edited to Gradescope. You may submit more than once before the deadline; only the final submission will be scored. Check that you have successfully submitted your code on Gradescope. See ",(0,i.kt)("a",{parentName:"p",href:"https://cs61a.org/lab/lab00#task-c-submitting-the-assignment"},"Lab 0")," for more instructions on submitting assignments."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Using Ok:")," If you have any questions about using Ok, please refer to ",(0,i.kt)("a",{parentName:"p",href:"https://cs61a.org/articles/using-ok"},"this guide.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Grading:")," Homework is graded based on correctness. Each incorrect problem will decrease the total score by one point. ",(0,i.kt)("strong",{parentName:"p"},"This homework is out of 2 points.")),(0,i.kt)("h2",{id:"required-questions"},"Required Questions"),(0,i.kt)("h2",{id:"getting-started-videos"},"Getting Started Videos"),(0,i.kt)("p",null,"These videos may provide some helpful direction for tackling the coding problems on this assignment."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"To see these videos, you should be logged into your berkeley.edu email.")),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://youtu.be/playlist?list=PLx38hZJ5RLZcStdG8HQmwFTAo0VLra9IM"},"YouTube link")),(0,i.kt)("h2",{id:"midsemester-survey"},"Midsemester Survey"),(0,i.kt)("h3",{id:"q1-mid-semester-feedback"},"Q1: Mid-Semester Feedback"),(0,i.kt)("p",null,"As part of this homework, fill out the ",(0,i.kt)("a",{parentName:"p",href:"https://forms.gle/HPegZMaadytQg9NX6"},"Mid-Semester Feedback")," form."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Confidentiality"),": Your responses to the survey are confidential, and only the instructors will be able to see this data unanonymized. More specifics on confidentiality can be found on the survey itself.")),(0,i.kt)("p",null,"Once you finish the survey, you will be presented with a passphrase (if you miss it, it should also be at the bottom of the confirmation email you receive). Put this passphrase, as a string, on the line that says ",(0,i.kt)("inlineCode",{parentName:"p"},"passphrase = '*** PASSPHRASE HERE ***'")," in the Python file for this assignment."),(0,i.kt)("p",null,"Use Ok to test your code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"python3 ok -q midsem_survey\n")),(0,i.kt)("h2",{id:"oop"},"OOP"),(0,i.kt)("h3",{id:"q2-vending-machine"},"Q2: Vending Machine"),(0,i.kt)("p",null,"In this question you'll create a ",(0,i.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Vending_machine"},"vending machine")," that sells a single product and provides change when needed."),(0,i.kt)("p",null,"Create a class called ",(0,i.kt)("inlineCode",{parentName:"p"},"VendingMachine")," that represents a vending machine for some product. A ",(0,i.kt)("inlineCode",{parentName:"p"},"VendingMachine")," object returns strings describing its interactions. Make sure your output ",(0,i.kt)("em",{parentName:"p"},"exactly")," matches the strings in the doctests including punctuation and spacing!"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"You may find Python's formatted string literals, or ",(0,i.kt)("a",{parentName:"p",href:"https://docs.python.org/3/tutorial/inputoutput.html#fancier-output-formatting"},"f-strings")," useful. A quick example:"),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre"},">>> feeling = 'love'\n>>> course = '61A!'\n>>> f'I {feeling} {course}'\n'I love 61A!'\n"))),(0,i.kt)("p",null,"Fill in the ",(0,i.kt)("inlineCode",{parentName:"p"},"VendingMachine")," class, ",(0,i.kt)("em",{parentName:"p"},"adding attributes and methods as appropriate"),", such that its behavior matches the following doctests:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"class VendingMachine:\n    \"\"\"A vending machine that vends some product for some price.\n\n    >>> v = VendingMachine('candy', 10)\n    >>> v.vend()\n    'Nothing left to vend. Please restock.'\n    >>> v.add_funds(15)\n    'Nothing left to vend. Please restock. Here is your $15.'\n    >>> v.restock(2)\n    'Current candy stock: 2'\n    >>> v.vend()\n    'Please add $10 more funds.'\n    >>> v.add_funds(7)\n    'Current balance: $7'\n    >>> v.vend()\n    'Please add $3 more funds.'\n    >>> v.add_funds(5)\n    'Current balance: $12'\n    >>> v.vend()\n    'Here is your candy and $2 change.'\n    >>> v.add_funds(10)\n    'Current balance: $10'\n    >>> v.vend()\n    'Here is your candy.'\n    >>> v.add_funds(15)\n    'Nothing left to vend. Please restock. Here is your $15.'\n\n    >>> w = VendingMachine('soda', 2)\n    >>> w.restock(3)\n    'Current soda stock: 3'\n    >>> w.restock(3)\n    'Current soda stock: 6'\n    >>> w.add_funds(2)\n    'Current balance: $2'\n    >>> w.vend()\n    'Here is your soda.'\n    \"\"\"\n    \"*** YOUR CODE HERE ***\"\n\n")),(0,i.kt)("p",null,"Use Ok to test your code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"python3 ok -q VendingMachine\n")),(0,i.kt)("h2",{id:"check-your-score-locally"},"Check Your Score Locally"),(0,i.kt)("p",null,"You can locally check your score on each question of this assignment by running"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"python3 ok --score\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"This does NOT submit the assignment!")," When you are satisfied with your score, submit the assignment to Gradescope to receive credit for it."),(0,i.kt)("h2",{id:"submit"},"Submit"),(0,i.kt)("p",null,"Submit this assignment by uploading any files you've edited ",(0,i.kt)("strong",{parentName:"p"},"to the appropriate Gradescope assignment.")," ",(0,i.kt)("a",{parentName:"p",href:"https://cs61a.org/lab/lab00/#submit-with-gradescope"},"Lab 00")," has detailed instructions."),(0,i.kt)("p",null,"In addition, all students who are ",(0,i.kt)("strong",{parentName:"p"},"not")," in the mega lab must complete this ",(0,i.kt)("a",{parentName:"p",href:"https://go.cs61a.org/lab-att"},"attendance form"),". Submit this form each week, whether you attend lab or missed it for a good reason. The attendance form is not required for mega section students."),(0,i.kt)("h2",{id:"optional-questions"},"Optional Questions"),(0,i.kt)("h3",{id:"q3-store-digits"},"Q3: Store Digits"),(0,i.kt)("p",null,"Write a function ",(0,i.kt)("inlineCode",{parentName:"p"},"store_digits")," that takes in an integer ",(0,i.kt)("inlineCode",{parentName:"p"},"n")," and returns a linked list where each element of the list is a digit of ",(0,i.kt)("inlineCode",{parentName:"p"},"n"),"."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Important"),": Do not use any string manipulation functions like ",(0,i.kt)("inlineCode",{parentName:"p"},"str")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"reversed"),".")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'def store_digits(n):\n    """Stores the digits of a positive number n in a linked list.\n\n    >>> s = store_digits(1)\n    >>> s\n    Link(1)\n    >>> store_digits(2345)\n    Link(2, Link(3, Link(4, Link(5))))\n    >>> store_digits(876)\n    Link(8, Link(7, Link(6)))\n    >>> store_digits(2450)\n    Link(2, Link(4, Link(5, Link(0))))\n    >>> # a check for restricted functions\n    >>> import inspect, re\n    >>> cleaned = re.sub(r"#.*\\\\n", \'\', re.sub(r\'"{3}[\\s\\S]*?"{3}\', \'\', inspect.getsource(store_digits)))\n    >>> print("Do not use str or reversed!") if any([r in cleaned for r in ["str", "reversed"]]) else None\n    """\n    "*** YOUR CODE HERE ***"\n\n')),(0,i.kt)("p",null,"Use Ok to test your code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"python3 ok -q store_digits\n")),(0,i.kt)("h3",{id:"q4-mutable-mapping"},"Q4: Mutable Mapping"),(0,i.kt)("p",null,"Implement ",(0,i.kt)("inlineCode",{parentName:"p"},"deep_map_mut(func, link)"),", which applies a function ",(0,i.kt)("inlineCode",{parentName:"p"},"func")," onto all elements in the given linked list ",(0,i.kt)("inlineCode",{parentName:"p"},"lnk"),". If an element is itself a linked list, apply ",(0,i.kt)("inlineCode",{parentName:"p"},"func")," to each of its elements, and so on."),(0,i.kt)("p",null,"Your implementation should mutate the original linked list. Do not create any new linked lists."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Hint"),": The built-in ",(0,i.kt)("inlineCode",{parentName:"p"},"isinstance")," function may be useful."),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre"},">>> s = Link(1, Link(2, Link(3, Link(4))))\n>>> isinstance(s, Link)\nTrue\n>>> isinstance(s, int)\nFalse\n"))),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"Construct Check"),": The last doctest of this question ensures that you do not create new linked lists. If you are failing this doctest, ensure that you are not creating link lists by calling the constructor, i.e."),(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre"},"s = Link(1)\n"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'def deep_map_mut(func, lnk):\n    """Mutates a deep link lnk by replacing each item found with the\n    result of calling func on the item. Does NOT create new Links (so\n    no use of Link\'s constructor).\n\n    Does not return the modified Link object.\n\n    >>> link1 = Link(3, Link(Link(4), Link(5, Link(6))))\n    >>> print(link1)\n    <3 <4> 5 6>\n    >>> # Disallow the use of making new Links before calling deep_map_mut\n    >>> Link.__init__, hold = lambda *args: print("Do not create any new Links."), Link.__init__\n    >>> try:\n    ...     deep_map_mut(lambda x: x * x, link1)\n    ... finally:\n    ...     Link.__init__ = hold\n    >>> print(link1)\n    <9 <16> 25 36>\n    """\n    "*** YOUR CODE HERE ***"\n\n')),(0,i.kt)("p",null,"Use Ok to test your code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"python3 ok -q deep_map_mut\n")),(0,i.kt)("h3",{id:"q5-two-list"},"Q5: Two List"),(0,i.kt)("p",null,"Implement a function ",(0,i.kt)("inlineCode",{parentName:"p"},"two_list")," that takes in two lists and returns a linked list. The first list contains the values that we want to put in the linked list, and the second list contains the number of each corresponding value. Assume both lists are the same size and have a length of 1 or greater. Assume all elements in the second list are greater than 0."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'def two_list(vals, counts):\n    """\n    Returns a linked list according to the two lists that were passed in. Assume\n    vals and counts are the same size. Elements in vals represent the value, and the\n    corresponding element in counts represents the number of this value desired in the\n    final linked list. Assume all elements in counts are greater than 0. Assume both\n    lists have at least one element.\n    >>> a = [1, 3]\n    >>> b = [1, 1]\n    >>> c = two_list(a, b)\n    >>> c\n    Link(1, Link(3))\n    >>> a = [1, 3, 2]\n    >>> b = [2, 2, 1]\n    >>> c = two_list(a, b)\n    >>> c\n    Link(1, Link(1, Link(3, Link(3, Link(2)))))\n    """\n    "*** YOUR CODE HERE ***"\n\n')),(0,i.kt)("p",null,"Use Ok to test your code:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"python3 ok -q two_list\n")),(0,i.kt)("h2",{id:"exam-practice"},"Exam Practice"),(0,i.kt)("p",null,"Homework assignments will also contain prior exam questions for you to try. These questions have no submission component; feel free to attempt them if you'd like some practice!"),(0,i.kt)("p",null,"Object-Oriented Programming"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Spring 2022 MT2 Q8: ",(0,i.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/sp22/mt2/61a-sp22-mt2.pdf#page=17"},"CS61A Presents The Game of Hoop.")),(0,i.kt)("li",{parentName:"ol"},"Fall 2020 MT2 Q3: ",(0,i.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/fa20/mt2/61a-fa20-mt2.pdf#page=9"},"Sparse Lists")),(0,i.kt)("li",{parentName:"ol"},"Fall 2019 MT2 Q7: ",(0,i.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/fa19/mt2/61a-fa19-mt2.pdf#page=8"},"Version 2.0"))),(0,i.kt)("p",null,"Linked Lists"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Fall 2020 Final Q3: ",(0,i.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/fa20/final/61a-fa20-final.pdf#page=9"},"College Party")),(0,i.kt)("li",{parentName:"ol"},"Fall 2018 MT2 Q6: ",(0,i.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/fa18/mt2/61a-fa18-mt2.pdf#page=6"},"Dr. Frankenlink")),(0,i.kt)("li",{parentName:"ol"},"Spring 2017 MT1 Q5: ",(0,i.kt)("a",{parentName:"li",href:"https://cs61a.org/exam/sp17/mt1/61a-sp17-mt1.pdf#page=7"},"Insert"))))}d.isMDXComponent=!0},86992:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/files/hw06-952475431b1ba4dc26c0c3552c121d01.zip"}}]);